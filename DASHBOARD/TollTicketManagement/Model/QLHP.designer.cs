#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TollTicketManagement.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HPE")]
	public partial class QLHPDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLS_VehicleType(LS_VehicleType instance);
    partial void UpdateLS_VehicleType(LS_VehicleType instance);
    partial void DeleteLS_VehicleType(LS_VehicleType instance);
    partial void InsertLS_Lane(LS_Lane instance);
    partial void UpdateLS_Lane(LS_Lane instance);
    partial void DeleteLS_Lane(LS_Lane instance);
    partial void InsertLS_Station(LS_Station instance);
    partial void UpdateLS_Station(LS_Station instance);
    partial void DeleteLS_Station(LS_Station instance);
    partial void InsertLS_Route(LS_Route instance);
    partial void UpdateLS_Route(LS_Route instance);
    partial void DeleteLS_Route(LS_Route instance);
    partial void InsertIN_CheckSmartCard(IN_CheckSmartCard instance);
    partial void UpdateIN_CheckSmartCard(IN_CheckSmartCard instance);
    partial void DeleteIN_CheckSmartCard(IN_CheckSmartCard instance);
    partial void InsertOUT_CheckSmartCard(OUT_CheckSmartCard instance);
    partial void UpdateOUT_CheckSmartCard(OUT_CheckSmartCard instance);
    partial void DeleteOUT_CheckSmartCard(OUT_CheckSmartCard instance);
    partial void InsertAC_PPCWhiteList(AC_PPCWhiteList instance);
    partial void UpdateAC_PPCWhiteList(AC_PPCWhiteList instance);
    partial void DeleteAC_PPCWhiteList(AC_PPCWhiteList instance);
    partial void InsertLS_Card(LS_Card instance);
    partial void UpdateLS_Card(LS_Card instance);
    partial void DeleteLS_Card(LS_Card instance);
    partial void InsertAC_TollWhiteList(AC_TollWhiteList instance);
    partial void UpdateAC_TollWhiteList(AC_TollWhiteList instance);
    partial void DeleteAC_TollWhiteList(AC_TollWhiteList instance);
    partial void InsertLS_Employee(LS_Employee instance);
    partial void UpdateLS_Employee(LS_Employee instance);
    partial void DeleteLS_Employee(LS_Employee instance);
    #endregion
		
		public QLHPDataContext() : 
				base(global::TollTicketManagement.Properties.Settings.Default.HPEConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLHPDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLHPDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLHPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLHPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LS_VehicleType> LS_VehicleTypes
		{
			get
			{
				return this.GetTable<LS_VehicleType>();
			}
		}
		
		public System.Data.Linq.Table<LS_Lane> LS_Lanes
		{
			get
			{
				return this.GetTable<LS_Lane>();
			}
		}
		
		public System.Data.Linq.Table<LS_Station> LS_Stations
		{
			get
			{
				return this.GetTable<LS_Station>();
			}
		}
		
		public System.Data.Linq.Table<LS_Route> LS_Routes
		{
			get
			{
				return this.GetTable<LS_Route>();
			}
		}
		
		public System.Data.Linq.Table<IN_CheckSmartCard> IN_CheckSmartCards
		{
			get
			{
				return this.GetTable<IN_CheckSmartCard>();
			}
		}
		
		public System.Data.Linq.Table<OUT_CheckSmartCard> OUT_CheckSmartCards
		{
			get
			{
				return this.GetTable<OUT_CheckSmartCard>();
			}
		}
		
		public System.Data.Linq.Table<AC_PPCWhiteList> AC_PPCWhiteLists
		{
			get
			{
				return this.GetTable<AC_PPCWhiteList>();
			}
		}
		
		public System.Data.Linq.Table<LS_Card> LS_Cards
		{
			get
			{
				return this.GetTable<LS_Card>();
			}
		}
		
		public System.Data.Linq.Table<AC_TollWhiteList> AC_TollWhiteLists
		{
			get
			{
				return this.GetTable<AC_TollWhiteList>();
			}
		}
		
		public System.Data.Linq.Table<LS_Employee> LS_Employees
		{
			get
			{
				return this.GetTable<LS_Employee>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LS_VehicleType")]
	public partial class LS_VehicleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VehicleTypeID;
		
		private string _VehicleTypeCode;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _AmountPerKm;
		
		private string _Note;
		
		private bool _IsUsed;
		
		private EntitySet<IN_CheckSmartCard> _IN_CheckSmartCards;
		
		private EntitySet<AC_PPCWhiteList> _AC_PPCWhiteLists;
		
		private EntitySet<AC_TollWhiteList> _AC_TollWhiteLists;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVehicleTypeIDChanging(int value);
    partial void OnVehicleTypeIDChanged();
    partial void OnVehicleTypeCodeChanging(string value);
    partial void OnVehicleTypeCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnAmountPerKmChanging(System.Nullable<int> value);
    partial void OnAmountPerKmChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnIsUsedChanging(bool value);
    partial void OnIsUsedChanged();
    #endregion
		
		public LS_VehicleType()
		{
			this._IN_CheckSmartCards = new EntitySet<IN_CheckSmartCard>(new Action<IN_CheckSmartCard>(this.attach_IN_CheckSmartCards), new Action<IN_CheckSmartCard>(this.detach_IN_CheckSmartCards));
			this._AC_PPCWhiteLists = new EntitySet<AC_PPCWhiteList>(new Action<AC_PPCWhiteList>(this.attach_AC_PPCWhiteLists), new Action<AC_PPCWhiteList>(this.detach_AC_PPCWhiteLists));
			this._AC_TollWhiteLists = new EntitySet<AC_TollWhiteList>(new Action<AC_TollWhiteList>(this.attach_AC_TollWhiteLists), new Action<AC_TollWhiteList>(this.detach_AC_TollWhiteLists));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VehicleTypeID
		{
			get
			{
				return this._VehicleTypeID;
			}
			set
			{
				if ((this._VehicleTypeID != value))
				{
					this.OnVehicleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleTypeID = value;
					this.SendPropertyChanged("VehicleTypeID");
					this.OnVehicleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleTypeCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string VehicleTypeCode
		{
			get
			{
				return this._VehicleTypeCode;
			}
			set
			{
				if ((this._VehicleTypeCode != value))
				{
					this.OnVehicleTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._VehicleTypeCode = value;
					this.SendPropertyChanged("VehicleTypeCode");
					this.OnVehicleTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(200)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPerKm", DbType="Int")]
		public System.Nullable<int> AmountPerKm
		{
			get
			{
				return this._AmountPerKm;
			}
			set
			{
				if ((this._AmountPerKm != value))
				{
					this.OnAmountPerKmChanging(value);
					this.SendPropertyChanging();
					this._AmountPerKm = value;
					this.SendPropertyChanged("AmountPerKm");
					this.OnAmountPerKmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit NOT NULL")]
		public bool IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_VehicleType_IN_CheckSmartCard", Storage="_IN_CheckSmartCards", ThisKey="VehicleTypeID", OtherKey="VehicleTypeID")]
		public EntitySet<IN_CheckSmartCard> IN_CheckSmartCards
		{
			get
			{
				return this._IN_CheckSmartCards;
			}
			set
			{
				this._IN_CheckSmartCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_VehicleType_AC_PPCWhiteList", Storage="_AC_PPCWhiteLists", ThisKey="VehicleTypeID", OtherKey="VehicleTypeID")]
		public EntitySet<AC_PPCWhiteList> AC_PPCWhiteLists
		{
			get
			{
				return this._AC_PPCWhiteLists;
			}
			set
			{
				this._AC_PPCWhiteLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_VehicleType_AC_TollWhiteList", Storage="_AC_TollWhiteLists", ThisKey="VehicleTypeID", OtherKey="VehicleTypeID")]
		public EntitySet<AC_TollWhiteList> AC_TollWhiteLists
		{
			get
			{
				return this._AC_TollWhiteLists;
			}
			set
			{
				this._AC_TollWhiteLists.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IN_CheckSmartCards(IN_CheckSmartCard entity)
		{
			this.SendPropertyChanging();
			entity.LS_VehicleType = this;
		}
		
		private void detach_IN_CheckSmartCards(IN_CheckSmartCard entity)
		{
			this.SendPropertyChanging();
			entity.LS_VehicleType = null;
		}
		
		private void attach_AC_PPCWhiteLists(AC_PPCWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_VehicleType = this;
		}
		
		private void detach_AC_PPCWhiteLists(AC_PPCWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_VehicleType = null;
		}
		
		private void attach_AC_TollWhiteLists(AC_TollWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_VehicleType = this;
		}
		
		private void detach_AC_TollWhiteLists(AC_TollWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_VehicleType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LS_Lane")]
	public partial class LS_Lane : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LaneID;
		
		private int _StationID;
		
		private string _LaneCode;
		
		private string _Name;
		
		private short _DirectionType;
		
		private int _LaneType;
		
		private string _Note;
		
		private bool _IsUsed;
		
		private EntitySet<IN_CheckSmartCard> _IN_CheckSmartCards;
		
		private EntitySet<OUT_CheckSmartCard> _OUT_CheckSmartCards;
		
		private EntitySet<AC_PPCWhiteList> _AC_PPCWhiteLists1;
		
		private EntitySet<AC_PPCWhiteList> _AC_PPCWhiteLists;
		
		private EntitySet<AC_TollWhiteList> _AC_TollWhiteLists1;
		
		private EntitySet<AC_TollWhiteList> _AC_TollWhiteLists;
		
		private EntityRef<LS_Station> _LS_Station;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLaneIDChanging(int value);
    partial void OnLaneIDChanged();
    partial void OnStationIDChanging(int value);
    partial void OnStationIDChanged();
    partial void OnLaneCodeChanging(string value);
    partial void OnLaneCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDirectionTypeChanging(short value);
    partial void OnDirectionTypeChanged();
    partial void OnLaneTypeChanging(int value);
    partial void OnLaneTypeChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnIsUsedChanging(bool value);
    partial void OnIsUsedChanged();
    #endregion
		
		public LS_Lane()
		{
			this._IN_CheckSmartCards = new EntitySet<IN_CheckSmartCard>(new Action<IN_CheckSmartCard>(this.attach_IN_CheckSmartCards), new Action<IN_CheckSmartCard>(this.detach_IN_CheckSmartCards));
			this._OUT_CheckSmartCards = new EntitySet<OUT_CheckSmartCard>(new Action<OUT_CheckSmartCard>(this.attach_OUT_CheckSmartCards), new Action<OUT_CheckSmartCard>(this.detach_OUT_CheckSmartCards));
			this._AC_PPCWhiteLists1 = new EntitySet<AC_PPCWhiteList>(new Action<AC_PPCWhiteList>(this.attach_AC_PPCWhiteLists1), new Action<AC_PPCWhiteList>(this.detach_AC_PPCWhiteLists1));
			this._AC_PPCWhiteLists = new EntitySet<AC_PPCWhiteList>(new Action<AC_PPCWhiteList>(this.attach_AC_PPCWhiteLists), new Action<AC_PPCWhiteList>(this.detach_AC_PPCWhiteLists));
			this._AC_TollWhiteLists1 = new EntitySet<AC_TollWhiteList>(new Action<AC_TollWhiteList>(this.attach_AC_TollWhiteLists1), new Action<AC_TollWhiteList>(this.detach_AC_TollWhiteLists1));
			this._AC_TollWhiteLists = new EntitySet<AC_TollWhiteList>(new Action<AC_TollWhiteList>(this.attach_AC_TollWhiteLists), new Action<AC_TollWhiteList>(this.detach_AC_TollWhiteLists));
			this._LS_Station = default(EntityRef<LS_Station>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaneID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LaneID
		{
			get
			{
				return this._LaneID;
			}
			set
			{
				if ((this._LaneID != value))
				{
					this.OnLaneIDChanging(value);
					this.SendPropertyChanging();
					this._LaneID = value;
					this.SendPropertyChanged("LaneID");
					this.OnLaneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationID", DbType="Int NOT NULL")]
		public int StationID
		{
			get
			{
				return this._StationID;
			}
			set
			{
				if ((this._StationID != value))
				{
					if (this._LS_Station.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStationIDChanging(value);
					this.SendPropertyChanging();
					this._StationID = value;
					this.SendPropertyChanged("StationID");
					this.OnStationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaneCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string LaneCode
		{
			get
			{
				return this._LaneCode;
			}
			set
			{
				if ((this._LaneCode != value))
				{
					this.OnLaneCodeChanging(value);
					this.SendPropertyChanging();
					this._LaneCode = value;
					this.SendPropertyChanged("LaneCode");
					this.OnLaneCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionType", DbType="SmallInt NOT NULL")]
		public short DirectionType
		{
			get
			{
				return this._DirectionType;
			}
			set
			{
				if ((this._DirectionType != value))
				{
					this.OnDirectionTypeChanging(value);
					this.SendPropertyChanging();
					this._DirectionType = value;
					this.SendPropertyChanged("DirectionType");
					this.OnDirectionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaneType", DbType="Int NOT NULL")]
		public int LaneType
		{
			get
			{
				return this._LaneType;
			}
			set
			{
				if ((this._LaneType != value))
				{
					this.OnLaneTypeChanging(value);
					this.SendPropertyChanging();
					this._LaneType = value;
					this.SendPropertyChanged("LaneType");
					this.OnLaneTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit NOT NULL")]
		public bool IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Lane_IN_CheckSmartCard", Storage="_IN_CheckSmartCards", ThisKey="LaneID", OtherKey="LaneID")]
		public EntitySet<IN_CheckSmartCard> IN_CheckSmartCards
		{
			get
			{
				return this._IN_CheckSmartCards;
			}
			set
			{
				this._IN_CheckSmartCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Lane_OUT_CheckSmartCard", Storage="_OUT_CheckSmartCards", ThisKey="LaneID", OtherKey="LaneID")]
		public EntitySet<OUT_CheckSmartCard> OUT_CheckSmartCards
		{
			get
			{
				return this._OUT_CheckSmartCards;
			}
			set
			{
				this._OUT_CheckSmartCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Lane_AC_PPCWhiteList", Storage="_AC_PPCWhiteLists1", ThisKey="LaneID", OtherKey="LaneIDIn")]
		public EntitySet<AC_PPCWhiteList> AC_PPCWhiteLists1
		{
			get
			{
				return this._AC_PPCWhiteLists1;
			}
			set
			{
				this._AC_PPCWhiteLists1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Lane_AC_PPCWhiteList1", Storage="_AC_PPCWhiteLists", ThisKey="LaneID", OtherKey="LaneIDOut")]
		public EntitySet<AC_PPCWhiteList> AC_PPCWhiteLists
		{
			get
			{
				return this._AC_PPCWhiteLists;
			}
			set
			{
				this._AC_PPCWhiteLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Lane_AC_TollWhiteList", Storage="_AC_TollWhiteLists1", ThisKey="LaneID", OtherKey="LaneIDIn")]
		public EntitySet<AC_TollWhiteList> AC_TollWhiteLists1
		{
			get
			{
				return this._AC_TollWhiteLists1;
			}
			set
			{
				this._AC_TollWhiteLists1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Lane_AC_TollWhiteList1", Storage="_AC_TollWhiteLists", ThisKey="LaneID", OtherKey="LaneIDOut")]
		public EntitySet<AC_TollWhiteList> AC_TollWhiteLists
		{
			get
			{
				return this._AC_TollWhiteLists;
			}
			set
			{
				this._AC_TollWhiteLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Station_LS_Lane", Storage="_LS_Station", ThisKey="StationID", OtherKey="StationID", IsForeignKey=true)]
		public LS_Station LS_Station
		{
			get
			{
				return this._LS_Station.Entity;
			}
			set
			{
				LS_Station previousValue = this._LS_Station.Entity;
				if (((previousValue != value) 
							|| (this._LS_Station.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Station.Entity = null;
						previousValue.LS_Lanes.Remove(this);
					}
					this._LS_Station.Entity = value;
					if ((value != null))
					{
						value.LS_Lanes.Add(this);
						this._StationID = value.StationID;
					}
					else
					{
						this._StationID = default(int);
					}
					this.SendPropertyChanged("LS_Station");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IN_CheckSmartCards(IN_CheckSmartCard entity)
		{
			this.SendPropertyChanging();
			entity.LS_Lane = this;
		}
		
		private void detach_IN_CheckSmartCards(IN_CheckSmartCard entity)
		{
			this.SendPropertyChanging();
			entity.LS_Lane = null;
		}
		
		private void attach_OUT_CheckSmartCards(OUT_CheckSmartCard entity)
		{
			this.SendPropertyChanging();
			entity.LS_Lane = this;
		}
		
		private void detach_OUT_CheckSmartCards(OUT_CheckSmartCard entity)
		{
			this.SendPropertyChanging();
			entity.LS_Lane = null;
		}
		
		private void attach_AC_PPCWhiteLists1(AC_PPCWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Lane1 = this;
		}
		
		private void detach_AC_PPCWhiteLists1(AC_PPCWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Lane1 = null;
		}
		
		private void attach_AC_PPCWhiteLists(AC_PPCWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Lane = this;
		}
		
		private void detach_AC_PPCWhiteLists(AC_PPCWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Lane = null;
		}
		
		private void attach_AC_TollWhiteLists1(AC_TollWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Lane1 = this;
		}
		
		private void detach_AC_TollWhiteLists1(AC_TollWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Lane1 = null;
		}
		
		private void attach_AC_TollWhiteLists(AC_TollWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Lane = this;
		}
		
		private void detach_AC_TollWhiteLists(AC_TollWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Lane = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LS_Station")]
	public partial class LS_Station : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StationID;
		
		private string _StationCode;
		
		private string _Name;
		
		private int _CompanyID;
		
		private int _StationType;
		
		private string _Address;
		
		private string _Telephone;
		
		private string _Fax;
		
		private string _Note;
		
		private bool _IsUsed;
		
		private EntitySet<LS_Lane> _LS_Lanes;
		
		private EntitySet<LS_Route> _LS_Routes1;
		
		private EntitySet<LS_Route> _LS_Routes;
		
		private EntitySet<IN_CheckSmartCard> _IN_CheckSmartCards;
		
		private EntitySet<OUT_CheckSmartCard> _OUT_CheckSmartCards;
		
		private EntitySet<AC_PPCWhiteList> _AC_PPCWhiteLists1;
		
		private EntitySet<AC_PPCWhiteList> _AC_PPCWhiteLists;
		
		private EntitySet<AC_TollWhiteList> _AC_TollWhiteLists1;
		
		private EntitySet<AC_TollWhiteList> _AC_TollWhiteLists;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStationIDChanging(int value);
    partial void OnStationIDChanged();
    partial void OnStationCodeChanging(string value);
    partial void OnStationCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnStationTypeChanging(int value);
    partial void OnStationTypeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnIsUsedChanging(bool value);
    partial void OnIsUsedChanged();
    #endregion
		
		public LS_Station()
		{
			this._LS_Lanes = new EntitySet<LS_Lane>(new Action<LS_Lane>(this.attach_LS_Lanes), new Action<LS_Lane>(this.detach_LS_Lanes));
			this._LS_Routes1 = new EntitySet<LS_Route>(new Action<LS_Route>(this.attach_LS_Routes1), new Action<LS_Route>(this.detach_LS_Routes1));
			this._LS_Routes = new EntitySet<LS_Route>(new Action<LS_Route>(this.attach_LS_Routes), new Action<LS_Route>(this.detach_LS_Routes));
			this._IN_CheckSmartCards = new EntitySet<IN_CheckSmartCard>(new Action<IN_CheckSmartCard>(this.attach_IN_CheckSmartCards), new Action<IN_CheckSmartCard>(this.detach_IN_CheckSmartCards));
			this._OUT_CheckSmartCards = new EntitySet<OUT_CheckSmartCard>(new Action<OUT_CheckSmartCard>(this.attach_OUT_CheckSmartCards), new Action<OUT_CheckSmartCard>(this.detach_OUT_CheckSmartCards));
			this._AC_PPCWhiteLists1 = new EntitySet<AC_PPCWhiteList>(new Action<AC_PPCWhiteList>(this.attach_AC_PPCWhiteLists1), new Action<AC_PPCWhiteList>(this.detach_AC_PPCWhiteLists1));
			this._AC_PPCWhiteLists = new EntitySet<AC_PPCWhiteList>(new Action<AC_PPCWhiteList>(this.attach_AC_PPCWhiteLists), new Action<AC_PPCWhiteList>(this.detach_AC_PPCWhiteLists));
			this._AC_TollWhiteLists1 = new EntitySet<AC_TollWhiteList>(new Action<AC_TollWhiteList>(this.attach_AC_TollWhiteLists1), new Action<AC_TollWhiteList>(this.detach_AC_TollWhiteLists1));
			this._AC_TollWhiteLists = new EntitySet<AC_TollWhiteList>(new Action<AC_TollWhiteList>(this.attach_AC_TollWhiteLists), new Action<AC_TollWhiteList>(this.detach_AC_TollWhiteLists));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StationID
		{
			get
			{
				return this._StationID;
			}
			set
			{
				if ((this._StationID != value))
				{
					this.OnStationIDChanging(value);
					this.SendPropertyChanging();
					this._StationID = value;
					this.SendPropertyChanged("StationID");
					this.OnStationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string StationCode
		{
			get
			{
				return this._StationCode;
			}
			set
			{
				if ((this._StationCode != value))
				{
					this.OnStationCodeChanging(value);
					this.SendPropertyChanging();
					this._StationCode = value;
					this.SendPropertyChanged("StationCode");
					this.OnStationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationType", DbType="Int NOT NULL")]
		public int StationType
		{
			get
			{
				return this._StationType;
			}
			set
			{
				if ((this._StationType != value))
				{
					this.OnStationTypeChanging(value);
					this.SendPropertyChanging();
					this._StationType = value;
					this.SendPropertyChanged("StationType");
					this.OnStationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(100)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(100)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit NOT NULL")]
		public bool IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Station_LS_Lane", Storage="_LS_Lanes", ThisKey="StationID", OtherKey="StationID")]
		public EntitySet<LS_Lane> LS_Lanes
		{
			get
			{
				return this._LS_Lanes;
			}
			set
			{
				this._LS_Lanes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Station_LS_Route", Storage="_LS_Routes1", ThisKey="StationID", OtherKey="ToStationID")]
		public EntitySet<LS_Route> LS_Routes1
		{
			get
			{
				return this._LS_Routes1;
			}
			set
			{
				this._LS_Routes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Station_LS_Route1", Storage="_LS_Routes", ThisKey="StationID", OtherKey="FromStationID")]
		public EntitySet<LS_Route> LS_Routes
		{
			get
			{
				return this._LS_Routes;
			}
			set
			{
				this._LS_Routes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Station_IN_CheckSmartCard", Storage="_IN_CheckSmartCards", ThisKey="StationID", OtherKey="StationID")]
		public EntitySet<IN_CheckSmartCard> IN_CheckSmartCards
		{
			get
			{
				return this._IN_CheckSmartCards;
			}
			set
			{
				this._IN_CheckSmartCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Station_OUT_CheckSmartCard", Storage="_OUT_CheckSmartCards", ThisKey="StationID", OtherKey="StationID")]
		public EntitySet<OUT_CheckSmartCard> OUT_CheckSmartCards
		{
			get
			{
				return this._OUT_CheckSmartCards;
			}
			set
			{
				this._OUT_CheckSmartCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Station_AC_PPCWhiteList", Storage="_AC_PPCWhiteLists1", ThisKey="StationID", OtherKey="StationIDIn")]
		public EntitySet<AC_PPCWhiteList> AC_PPCWhiteLists1
		{
			get
			{
				return this._AC_PPCWhiteLists1;
			}
			set
			{
				this._AC_PPCWhiteLists1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Station_AC_PPCWhiteList1", Storage="_AC_PPCWhiteLists", ThisKey="StationID", OtherKey="StationIDOut")]
		public EntitySet<AC_PPCWhiteList> AC_PPCWhiteLists
		{
			get
			{
				return this._AC_PPCWhiteLists;
			}
			set
			{
				this._AC_PPCWhiteLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Station_AC_TollWhiteList", Storage="_AC_TollWhiteLists1", ThisKey="StationID", OtherKey="StationIDIn")]
		public EntitySet<AC_TollWhiteList> AC_TollWhiteLists1
		{
			get
			{
				return this._AC_TollWhiteLists1;
			}
			set
			{
				this._AC_TollWhiteLists1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Station_AC_TollWhiteList1", Storage="_AC_TollWhiteLists", ThisKey="StationID", OtherKey="LaneIDOut")]
		public EntitySet<AC_TollWhiteList> AC_TollWhiteLists
		{
			get
			{
				return this._AC_TollWhiteLists;
			}
			set
			{
				this._AC_TollWhiteLists.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LS_Lanes(LS_Lane entity)
		{
			this.SendPropertyChanging();
			entity.LS_Station = this;
		}
		
		private void detach_LS_Lanes(LS_Lane entity)
		{
			this.SendPropertyChanging();
			entity.LS_Station = null;
		}
		
		private void attach_LS_Routes1(LS_Route entity)
		{
			this.SendPropertyChanging();
			entity.LS_Station1 = this;
		}
		
		private void detach_LS_Routes1(LS_Route entity)
		{
			this.SendPropertyChanging();
			entity.LS_Station1 = null;
		}
		
		private void attach_LS_Routes(LS_Route entity)
		{
			this.SendPropertyChanging();
			entity.LS_Station = this;
		}
		
		private void detach_LS_Routes(LS_Route entity)
		{
			this.SendPropertyChanging();
			entity.LS_Station = null;
		}
		
		private void attach_IN_CheckSmartCards(IN_CheckSmartCard entity)
		{
			this.SendPropertyChanging();
			entity.LS_Station = this;
		}
		
		private void detach_IN_CheckSmartCards(IN_CheckSmartCard entity)
		{
			this.SendPropertyChanging();
			entity.LS_Station = null;
		}
		
		private void attach_OUT_CheckSmartCards(OUT_CheckSmartCard entity)
		{
			this.SendPropertyChanging();
			entity.LS_Station = this;
		}
		
		private void detach_OUT_CheckSmartCards(OUT_CheckSmartCard entity)
		{
			this.SendPropertyChanging();
			entity.LS_Station = null;
		}
		
		private void attach_AC_PPCWhiteLists1(AC_PPCWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Station1 = this;
		}
		
		private void detach_AC_PPCWhiteLists1(AC_PPCWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Station1 = null;
		}
		
		private void attach_AC_PPCWhiteLists(AC_PPCWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Station = this;
		}
		
		private void detach_AC_PPCWhiteLists(AC_PPCWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Station = null;
		}
		
		private void attach_AC_TollWhiteLists1(AC_TollWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Station1 = this;
		}
		
		private void detach_AC_TollWhiteLists1(AC_TollWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Station1 = null;
		}
		
		private void attach_AC_TollWhiteLists(AC_TollWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Station = this;
		}
		
		private void detach_AC_TollWhiteLists(AC_TollWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Station = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LS_Route")]
	public partial class LS_Route : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RouteID;
		
		private string _RouteCode;
		
		private string _Name;
		
		private int _FromStationID;
		
		private int _ToStationID;
		
		private System.Nullable<int> _Length;
		
		private string _Note;
		
		private System.Nullable<bool> _IsMaxLength;
		
		private bool _IsUsed;
		
		private EntitySet<OUT_CheckSmartCard> _OUT_CheckSmartCards;
		
		private EntitySet<AC_PPCWhiteList> _AC_PPCWhiteLists;
		
		private EntitySet<AC_TollWhiteList> _AC_TollWhiteLists;
		
		private EntityRef<LS_Station> _LS_Station1;
		
		private EntityRef<LS_Station> _LS_Station;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRouteIDChanging(int value);
    partial void OnRouteIDChanged();
    partial void OnRouteCodeChanging(string value);
    partial void OnRouteCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFromStationIDChanging(int value);
    partial void OnFromStationIDChanged();
    partial void OnToStationIDChanging(int value);
    partial void OnToStationIDChanged();
    partial void OnLengthChanging(System.Nullable<int> value);
    partial void OnLengthChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnIsMaxLengthChanging(System.Nullable<bool> value);
    partial void OnIsMaxLengthChanged();
    partial void OnIsUsedChanging(bool value);
    partial void OnIsUsedChanged();
    #endregion
		
		public LS_Route()
		{
			this._OUT_CheckSmartCards = new EntitySet<OUT_CheckSmartCard>(new Action<OUT_CheckSmartCard>(this.attach_OUT_CheckSmartCards), new Action<OUT_CheckSmartCard>(this.detach_OUT_CheckSmartCards));
			this._AC_PPCWhiteLists = new EntitySet<AC_PPCWhiteList>(new Action<AC_PPCWhiteList>(this.attach_AC_PPCWhiteLists), new Action<AC_PPCWhiteList>(this.detach_AC_PPCWhiteLists));
			this._AC_TollWhiteLists = new EntitySet<AC_TollWhiteList>(new Action<AC_TollWhiteList>(this.attach_AC_TollWhiteLists), new Action<AC_TollWhiteList>(this.detach_AC_TollWhiteLists));
			this._LS_Station1 = default(EntityRef<LS_Station>);
			this._LS_Station = default(EntityRef<LS_Station>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RouteID
		{
			get
			{
				return this._RouteID;
			}
			set
			{
				if ((this._RouteID != value))
				{
					this.OnRouteIDChanging(value);
					this.SendPropertyChanging();
					this._RouteID = value;
					this.SendPropertyChanged("RouteID");
					this.OnRouteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string RouteCode
		{
			get
			{
				return this._RouteCode;
			}
			set
			{
				if ((this._RouteCode != value))
				{
					this.OnRouteCodeChanging(value);
					this.SendPropertyChanging();
					this._RouteCode = value;
					this.SendPropertyChanged("RouteCode");
					this.OnRouteCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromStationID", DbType="Int NOT NULL")]
		public int FromStationID
		{
			get
			{
				return this._FromStationID;
			}
			set
			{
				if ((this._FromStationID != value))
				{
					if (this._LS_Station.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromStationIDChanging(value);
					this.SendPropertyChanging();
					this._FromStationID = value;
					this.SendPropertyChanged("FromStationID");
					this.OnFromStationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToStationID", DbType="Int NOT NULL")]
		public int ToStationID
		{
			get
			{
				return this._ToStationID;
			}
			set
			{
				if ((this._ToStationID != value))
				{
					if (this._LS_Station1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToStationIDChanging(value);
					this.SendPropertyChanging();
					this._ToStationID = value;
					this.SendPropertyChanged("ToStationID");
					this.OnToStationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Int")]
		public System.Nullable<int> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMaxLength", DbType="Bit")]
		public System.Nullable<bool> IsMaxLength
		{
			get
			{
				return this._IsMaxLength;
			}
			set
			{
				if ((this._IsMaxLength != value))
				{
					this.OnIsMaxLengthChanging(value);
					this.SendPropertyChanging();
					this._IsMaxLength = value;
					this.SendPropertyChanged("IsMaxLength");
					this.OnIsMaxLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit NOT NULL")]
		public bool IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Route_OUT_CheckSmartCard", Storage="_OUT_CheckSmartCards", ThisKey="RouteID", OtherKey="RouteID")]
		public EntitySet<OUT_CheckSmartCard> OUT_CheckSmartCards
		{
			get
			{
				return this._OUT_CheckSmartCards;
			}
			set
			{
				this._OUT_CheckSmartCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Route_AC_PPCWhiteList", Storage="_AC_PPCWhiteLists", ThisKey="RouteID", OtherKey="RouteID")]
		public EntitySet<AC_PPCWhiteList> AC_PPCWhiteLists
		{
			get
			{
				return this._AC_PPCWhiteLists;
			}
			set
			{
				this._AC_PPCWhiteLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Route_AC_TollWhiteList", Storage="_AC_TollWhiteLists", ThisKey="RouteID", OtherKey="RouteID")]
		public EntitySet<AC_TollWhiteList> AC_TollWhiteLists
		{
			get
			{
				return this._AC_TollWhiteLists;
			}
			set
			{
				this._AC_TollWhiteLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Station_LS_Route", Storage="_LS_Station1", ThisKey="ToStationID", OtherKey="StationID", IsForeignKey=true)]
		public LS_Station LS_Station1
		{
			get
			{
				return this._LS_Station1.Entity;
			}
			set
			{
				LS_Station previousValue = this._LS_Station1.Entity;
				if (((previousValue != value) 
							|| (this._LS_Station1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Station1.Entity = null;
						previousValue.LS_Routes1.Remove(this);
					}
					this._LS_Station1.Entity = value;
					if ((value != null))
					{
						value.LS_Routes1.Add(this);
						this._ToStationID = value.StationID;
					}
					else
					{
						this._ToStationID = default(int);
					}
					this.SendPropertyChanged("LS_Station1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Station_LS_Route1", Storage="_LS_Station", ThisKey="FromStationID", OtherKey="StationID", IsForeignKey=true)]
		public LS_Station LS_Station
		{
			get
			{
				return this._LS_Station.Entity;
			}
			set
			{
				LS_Station previousValue = this._LS_Station.Entity;
				if (((previousValue != value) 
							|| (this._LS_Station.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Station.Entity = null;
						previousValue.LS_Routes.Remove(this);
					}
					this._LS_Station.Entity = value;
					if ((value != null))
					{
						value.LS_Routes.Add(this);
						this._FromStationID = value.StationID;
					}
					else
					{
						this._FromStationID = default(int);
					}
					this.SendPropertyChanged("LS_Station");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OUT_CheckSmartCards(OUT_CheckSmartCard entity)
		{
			this.SendPropertyChanging();
			entity.LS_Route = this;
		}
		
		private void detach_OUT_CheckSmartCards(OUT_CheckSmartCard entity)
		{
			this.SendPropertyChanging();
			entity.LS_Route = null;
		}
		
		private void attach_AC_PPCWhiteLists(AC_PPCWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Route = this;
		}
		
		private void detach_AC_PPCWhiteLists(AC_PPCWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Route = null;
		}
		
		private void attach_AC_TollWhiteLists(AC_TollWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Route = this;
		}
		
		private void detach_AC_TollWhiteLists(AC_TollWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Route = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IN_CheckSmartCard")]
	public partial class IN_CheckSmartCard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _InCheckSmartCardID;
		
		private string _TransactionID;
		
		private string _SmartCardID;
		
		private System.DateTime _CheckDate;
		
		private System.Nullable<int> _TicketTypeID;
		
		private System.Nullable<int> _VehicleTypeID;
		
		private System.Nullable<int> _EmployeeID;
		
		private System.Nullable<int> _ShiftID;
		
		private System.Nullable<int> _LaneID;
		
		private System.Nullable<int> _StationID;
		
		private string _ImageID;
		
		private string _RecogPlateNumber;
		
		private System.Nullable<short> _RecogResultType;
		
		private System.Nullable<short> _TransactionStatus;
		
		private System.Nullable<short> _PrecheckStatus;
		
		private System.Nullable<short> _PreSupervisionStatus;
		
		private System.Nullable<short> _SupervisionStatus;
		
		private System.Nullable<int> _ErrorID;
		
		private System.Nullable<System.Guid> _WIMID;
		
		private string _Note;
		
		private System.Nullable<bool> _IsVehicleInfoManual;
		
		private EntitySet<OUT_CheckSmartCard> _OUT_CheckSmartCards;
		
		private EntityRef<LS_Lane> _LS_Lane;
		
		private EntityRef<LS_Station> _LS_Station;
		
		private EntityRef<LS_VehicleType> _LS_VehicleType;
		
		private EntityRef<LS_Employee> _LS_Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInCheckSmartCardIDChanging(System.Guid value);
    partial void OnInCheckSmartCardIDChanged();
    partial void OnTransactionIDChanging(string value);
    partial void OnTransactionIDChanged();
    partial void OnSmartCardIDChanging(string value);
    partial void OnSmartCardIDChanged();
    partial void OnCheckDateChanging(System.DateTime value);
    partial void OnCheckDateChanged();
    partial void OnTicketTypeIDChanging(System.Nullable<int> value);
    partial void OnTicketTypeIDChanged();
    partial void OnVehicleTypeIDChanging(System.Nullable<int> value);
    partial void OnVehicleTypeIDChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    partial void OnShiftIDChanging(System.Nullable<int> value);
    partial void OnShiftIDChanged();
    partial void OnLaneIDChanging(System.Nullable<int> value);
    partial void OnLaneIDChanged();
    partial void OnStationIDChanging(System.Nullable<int> value);
    partial void OnStationIDChanged();
    partial void OnImageIDChanging(string value);
    partial void OnImageIDChanged();
    partial void OnRecogPlateNumberChanging(string value);
    partial void OnRecogPlateNumberChanged();
    partial void OnRecogResultTypeChanging(System.Nullable<short> value);
    partial void OnRecogResultTypeChanged();
    partial void OnTransactionStatusChanging(System.Nullable<short> value);
    partial void OnTransactionStatusChanged();
    partial void OnPrecheckStatusChanging(System.Nullable<short> value);
    partial void OnPrecheckStatusChanged();
    partial void OnPreSupervisionStatusChanging(System.Nullable<short> value);
    partial void OnPreSupervisionStatusChanged();
    partial void OnSupervisionStatusChanging(System.Nullable<short> value);
    partial void OnSupervisionStatusChanged();
    partial void OnErrorIDChanging(System.Nullable<int> value);
    partial void OnErrorIDChanged();
    partial void OnWIMIDChanging(System.Nullable<System.Guid> value);
    partial void OnWIMIDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnIsVehicleInfoManualChanging(System.Nullable<bool> value);
    partial void OnIsVehicleInfoManualChanged();
    #endregion
		
		public IN_CheckSmartCard()
		{
			this._OUT_CheckSmartCards = new EntitySet<OUT_CheckSmartCard>(new Action<OUT_CheckSmartCard>(this.attach_OUT_CheckSmartCards), new Action<OUT_CheckSmartCard>(this.detach_OUT_CheckSmartCards));
			this._LS_Lane = default(EntityRef<LS_Lane>);
			this._LS_Station = default(EntityRef<LS_Station>);
			this._LS_VehicleType = default(EntityRef<LS_VehicleType>);
			this._LS_Employee = default(EntityRef<LS_Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InCheckSmartCardID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid InCheckSmartCardID
		{
			get
			{
				return this._InCheckSmartCardID;
			}
			set
			{
				if ((this._InCheckSmartCardID != value))
				{
					this.OnInCheckSmartCardIDChanging(value);
					this.SendPropertyChanging();
					this._InCheckSmartCardID = value;
					this.SendPropertyChanged("InCheckSmartCardID");
					this.OnInCheckSmartCardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmartCardID", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string SmartCardID
		{
			get
			{
				return this._SmartCardID;
			}
			set
			{
				if ((this._SmartCardID != value))
				{
					this.OnSmartCardIDChanging(value);
					this.SendPropertyChanging();
					this._SmartCardID = value;
					this.SendPropertyChanged("SmartCardID");
					this.OnSmartCardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime NOT NULL")]
		public System.DateTime CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketTypeID", DbType="Int")]
		public System.Nullable<int> TicketTypeID
		{
			get
			{
				return this._TicketTypeID;
			}
			set
			{
				if ((this._TicketTypeID != value))
				{
					this.OnTicketTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TicketTypeID = value;
					this.SendPropertyChanged("TicketTypeID");
					this.OnTicketTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleTypeID", DbType="Int")]
		public System.Nullable<int> VehicleTypeID
		{
			get
			{
				return this._VehicleTypeID;
			}
			set
			{
				if ((this._VehicleTypeID != value))
				{
					if (this._LS_VehicleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleTypeID = value;
					this.SendPropertyChanged("VehicleTypeID");
					this.OnVehicleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._LS_Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftID", DbType="Int")]
		public System.Nullable<int> ShiftID
		{
			get
			{
				return this._ShiftID;
			}
			set
			{
				if ((this._ShiftID != value))
				{
					this.OnShiftIDChanging(value);
					this.SendPropertyChanging();
					this._ShiftID = value;
					this.SendPropertyChanged("ShiftID");
					this.OnShiftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaneID", DbType="Int")]
		public System.Nullable<int> LaneID
		{
			get
			{
				return this._LaneID;
			}
			set
			{
				if ((this._LaneID != value))
				{
					if (this._LS_Lane.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLaneIDChanging(value);
					this.SendPropertyChanging();
					this._LaneID = value;
					this.SendPropertyChanged("LaneID");
					this.OnLaneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationID", DbType="Int")]
		public System.Nullable<int> StationID
		{
			get
			{
				return this._StationID;
			}
			set
			{
				if ((this._StationID != value))
				{
					if (this._LS_Station.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStationIDChanging(value);
					this.SendPropertyChanging();
					this._StationID = value;
					this.SendPropertyChanged("StationID");
					this.OnStationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", DbType="NVarChar(50)")]
		public string ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecogPlateNumber", DbType="NVarChar(15)")]
		public string RecogPlateNumber
		{
			get
			{
				return this._RecogPlateNumber;
			}
			set
			{
				if ((this._RecogPlateNumber != value))
				{
					this.OnRecogPlateNumberChanging(value);
					this.SendPropertyChanging();
					this._RecogPlateNumber = value;
					this.SendPropertyChanged("RecogPlateNumber");
					this.OnRecogPlateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecogResultType", DbType="SmallInt")]
		public System.Nullable<short> RecogResultType
		{
			get
			{
				return this._RecogResultType;
			}
			set
			{
				if ((this._RecogResultType != value))
				{
					this.OnRecogResultTypeChanging(value);
					this.SendPropertyChanging();
					this._RecogResultType = value;
					this.SendPropertyChanged("RecogResultType");
					this.OnRecogResultTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionStatus", DbType="SmallInt")]
		public System.Nullable<short> TransactionStatus
		{
			get
			{
				return this._TransactionStatus;
			}
			set
			{
				if ((this._TransactionStatus != value))
				{
					this.OnTransactionStatusChanging(value);
					this.SendPropertyChanging();
					this._TransactionStatus = value;
					this.SendPropertyChanged("TransactionStatus");
					this.OnTransactionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecheckStatus", DbType="SmallInt")]
		public System.Nullable<short> PrecheckStatus
		{
			get
			{
				return this._PrecheckStatus;
			}
			set
			{
				if ((this._PrecheckStatus != value))
				{
					this.OnPrecheckStatusChanging(value);
					this.SendPropertyChanging();
					this._PrecheckStatus = value;
					this.SendPropertyChanged("PrecheckStatus");
					this.OnPrecheckStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreSupervisionStatus", DbType="SmallInt")]
		public System.Nullable<short> PreSupervisionStatus
		{
			get
			{
				return this._PreSupervisionStatus;
			}
			set
			{
				if ((this._PreSupervisionStatus != value))
				{
					this.OnPreSupervisionStatusChanging(value);
					this.SendPropertyChanging();
					this._PreSupervisionStatus = value;
					this.SendPropertyChanged("PreSupervisionStatus");
					this.OnPreSupervisionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupervisionStatus", DbType="SmallInt")]
		public System.Nullable<short> SupervisionStatus
		{
			get
			{
				return this._SupervisionStatus;
			}
			set
			{
				if ((this._SupervisionStatus != value))
				{
					this.OnSupervisionStatusChanging(value);
					this.SendPropertyChanging();
					this._SupervisionStatus = value;
					this.SendPropertyChanged("SupervisionStatus");
					this.OnSupervisionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorID", DbType="Int")]
		public System.Nullable<int> ErrorID
		{
			get
			{
				return this._ErrorID;
			}
			set
			{
				if ((this._ErrorID != value))
				{
					this.OnErrorIDChanging(value);
					this.SendPropertyChanging();
					this._ErrorID = value;
					this.SendPropertyChanged("ErrorID");
					this.OnErrorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WIMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> WIMID
		{
			get
			{
				return this._WIMID;
			}
			set
			{
				if ((this._WIMID != value))
				{
					this.OnWIMIDChanging(value);
					this.SendPropertyChanging();
					this._WIMID = value;
					this.SendPropertyChanged("WIMID");
					this.OnWIMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(100)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVehicleInfoManual", DbType="Bit")]
		public System.Nullable<bool> IsVehicleInfoManual
		{
			get
			{
				return this._IsVehicleInfoManual;
			}
			set
			{
				if ((this._IsVehicleInfoManual != value))
				{
					this.OnIsVehicleInfoManualChanging(value);
					this.SendPropertyChanging();
					this._IsVehicleInfoManual = value;
					this.SendPropertyChanged("IsVehicleInfoManual");
					this.OnIsVehicleInfoManualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IN_CheckSmartCard_OUT_CheckSmartCard", Storage="_OUT_CheckSmartCards", ThisKey="InCheckSmartCardID", OtherKey="InCheckSmartCardID")]
		public EntitySet<OUT_CheckSmartCard> OUT_CheckSmartCards
		{
			get
			{
				return this._OUT_CheckSmartCards;
			}
			set
			{
				this._OUT_CheckSmartCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Lane_IN_CheckSmartCard", Storage="_LS_Lane", ThisKey="LaneID", OtherKey="LaneID", IsForeignKey=true)]
		public LS_Lane LS_Lane
		{
			get
			{
				return this._LS_Lane.Entity;
			}
			set
			{
				LS_Lane previousValue = this._LS_Lane.Entity;
				if (((previousValue != value) 
							|| (this._LS_Lane.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Lane.Entity = null;
						previousValue.IN_CheckSmartCards.Remove(this);
					}
					this._LS_Lane.Entity = value;
					if ((value != null))
					{
						value.IN_CheckSmartCards.Add(this);
						this._LaneID = value.LaneID;
					}
					else
					{
						this._LaneID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_Lane");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Station_IN_CheckSmartCard", Storage="_LS_Station", ThisKey="StationID", OtherKey="StationID", IsForeignKey=true)]
		public LS_Station LS_Station
		{
			get
			{
				return this._LS_Station.Entity;
			}
			set
			{
				LS_Station previousValue = this._LS_Station.Entity;
				if (((previousValue != value) 
							|| (this._LS_Station.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Station.Entity = null;
						previousValue.IN_CheckSmartCards.Remove(this);
					}
					this._LS_Station.Entity = value;
					if ((value != null))
					{
						value.IN_CheckSmartCards.Add(this);
						this._StationID = value.StationID;
					}
					else
					{
						this._StationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_Station");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_VehicleType_IN_CheckSmartCard", Storage="_LS_VehicleType", ThisKey="VehicleTypeID", OtherKey="VehicleTypeID", IsForeignKey=true)]
		public LS_VehicleType LS_VehicleType
		{
			get
			{
				return this._LS_VehicleType.Entity;
			}
			set
			{
				LS_VehicleType previousValue = this._LS_VehicleType.Entity;
				if (((previousValue != value) 
							|| (this._LS_VehicleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_VehicleType.Entity = null;
						previousValue.IN_CheckSmartCards.Remove(this);
					}
					this._LS_VehicleType.Entity = value;
					if ((value != null))
					{
						value.IN_CheckSmartCards.Add(this);
						this._VehicleTypeID = value.VehicleTypeID;
					}
					else
					{
						this._VehicleTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_VehicleType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Employee_IN_CheckSmartCard", Storage="_LS_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public LS_Employee LS_Employee
		{
			get
			{
				return this._LS_Employee.Entity;
			}
			set
			{
				LS_Employee previousValue = this._LS_Employee.Entity;
				if (((previousValue != value) 
							|| (this._LS_Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Employee.Entity = null;
						previousValue.IN_CheckSmartCards.Remove(this);
					}
					this._LS_Employee.Entity = value;
					if ((value != null))
					{
						value.IN_CheckSmartCards.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OUT_CheckSmartCards(OUT_CheckSmartCard entity)
		{
			this.SendPropertyChanging();
			entity.IN_CheckSmartCard = this;
		}
		
		private void detach_OUT_CheckSmartCards(OUT_CheckSmartCard entity)
		{
			this.SendPropertyChanging();
			entity.IN_CheckSmartCard = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OUT_CheckSmartCard")]
	public partial class OUT_CheckSmartCard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _OutCheckSmartCardID;
		
		private string _TransactionID;
		
		private string _ReceiptNo;
		
		private string _SmartCardID;
		
		private System.Nullable<System.Guid> _InCheckSmartCardID;
		
		private System.Nullable<System.Guid> _InCheckSmartCardIDManual;
		
		private System.DateTime _CheckDate;
		
		private System.Nullable<int> _BeginBalance;
		
		private System.Nullable<int> _ChargeAmount;
		
		private System.Nullable<int> _Balance;
		
		private System.Nullable<int> _TicketTypeID;
		
		private System.Nullable<int> _VehicleTypeID;
		
		private System.Nullable<int> _RouteID;
		
		private System.Nullable<int> _EmployeeID;
		
		private System.Nullable<int> _ShiftID;
		
		private System.Nullable<int> _LaneID;
		
		private System.Nullable<int> _StationID;
		
		private string _ImageID;
		
		private string _RecogPlateNumber;
		
		private System.Nullable<short> _RecogResultType;
		
		private System.Nullable<short> _TransactionStatus;
		
		private System.Nullable<short> _PrecheckStatus;
		
		private System.Nullable<short> _PreSupervisionStatus;
		
		private System.Nullable<short> _SupervisionStatus;
		
		private System.Nullable<int> _ErrorID;
		
		private string _Note;
		
		private string _EntryPlateNumber;
		
		private System.Nullable<int> _EntryLaneID;
		
		private string _F1;
		
		private string _F2;
		
		private EntityRef<IN_CheckSmartCard> _IN_CheckSmartCard;
		
		private EntityRef<LS_Lane> _LS_Lane;
		
		private EntityRef<LS_Station> _LS_Station;
		
		private EntityRef<LS_Route> _LS_Route;
		
		private EntityRef<LS_Employee> _LS_Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOutCheckSmartCardIDChanging(System.Guid value);
    partial void OnOutCheckSmartCardIDChanged();
    partial void OnTransactionIDChanging(string value);
    partial void OnTransactionIDChanged();
    partial void OnReceiptNoChanging(string value);
    partial void OnReceiptNoChanged();
    partial void OnSmartCardIDChanging(string value);
    partial void OnSmartCardIDChanged();
    partial void OnInCheckSmartCardIDChanging(System.Nullable<System.Guid> value);
    partial void OnInCheckSmartCardIDChanged();
    partial void OnInCheckSmartCardIDManualChanging(System.Nullable<System.Guid> value);
    partial void OnInCheckSmartCardIDManualChanged();
    partial void OnCheckDateChanging(System.DateTime value);
    partial void OnCheckDateChanged();
    partial void OnBeginBalanceChanging(System.Nullable<int> value);
    partial void OnBeginBalanceChanged();
    partial void OnChargeAmountChanging(System.Nullable<int> value);
    partial void OnChargeAmountChanged();
    partial void OnBalanceChanging(System.Nullable<int> value);
    partial void OnBalanceChanged();
    partial void OnTicketTypeIDChanging(System.Nullable<int> value);
    partial void OnTicketTypeIDChanged();
    partial void OnVehicleTypeIDChanging(System.Nullable<int> value);
    partial void OnVehicleTypeIDChanged();
    partial void OnRouteIDChanging(System.Nullable<int> value);
    partial void OnRouteIDChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    partial void OnShiftIDChanging(System.Nullable<int> value);
    partial void OnShiftIDChanged();
    partial void OnLaneIDChanging(System.Nullable<int> value);
    partial void OnLaneIDChanged();
    partial void OnStationIDChanging(System.Nullable<int> value);
    partial void OnStationIDChanged();
    partial void OnImageIDChanging(string value);
    partial void OnImageIDChanged();
    partial void OnRecogPlateNumberChanging(string value);
    partial void OnRecogPlateNumberChanged();
    partial void OnRecogResultTypeChanging(System.Nullable<short> value);
    partial void OnRecogResultTypeChanged();
    partial void OnTransactionStatusChanging(System.Nullable<short> value);
    partial void OnTransactionStatusChanged();
    partial void OnPrecheckStatusChanging(System.Nullable<short> value);
    partial void OnPrecheckStatusChanged();
    partial void OnPreSupervisionStatusChanging(System.Nullable<short> value);
    partial void OnPreSupervisionStatusChanged();
    partial void OnSupervisionStatusChanging(System.Nullable<short> value);
    partial void OnSupervisionStatusChanged();
    partial void OnErrorIDChanging(System.Nullable<int> value);
    partial void OnErrorIDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnEntryPlateNumberChanging(string value);
    partial void OnEntryPlateNumberChanged();
    partial void OnEntryLaneIDChanging(System.Nullable<int> value);
    partial void OnEntryLaneIDChanged();
    partial void OnF1Changing(string value);
    partial void OnF1Changed();
    partial void OnF2Changing(string value);
    partial void OnF2Changed();
    #endregion
		
		public OUT_CheckSmartCard()
		{
			this._IN_CheckSmartCard = default(EntityRef<IN_CheckSmartCard>);
			this._LS_Lane = default(EntityRef<LS_Lane>);
			this._LS_Station = default(EntityRef<LS_Station>);
			this._LS_Route = default(EntityRef<LS_Route>);
			this._LS_Employee = default(EntityRef<LS_Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutCheckSmartCardID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OutCheckSmartCardID
		{
			get
			{
				return this._OutCheckSmartCardID;
			}
			set
			{
				if ((this._OutCheckSmartCardID != value))
				{
					this.OnOutCheckSmartCardIDChanging(value);
					this.SendPropertyChanging();
					this._OutCheckSmartCardID = value;
					this.SendPropertyChanged("OutCheckSmartCardID");
					this.OnOutCheckSmartCardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceiptNo
		{
			get
			{
				return this._ReceiptNo;
			}
			set
			{
				if ((this._ReceiptNo != value))
				{
					this.OnReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNo = value;
					this.SendPropertyChanged("ReceiptNo");
					this.OnReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmartCardID", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string SmartCardID
		{
			get
			{
				return this._SmartCardID;
			}
			set
			{
				if ((this._SmartCardID != value))
				{
					this.OnSmartCardIDChanging(value);
					this.SendPropertyChanging();
					this._SmartCardID = value;
					this.SendPropertyChanged("SmartCardID");
					this.OnSmartCardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InCheckSmartCardID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> InCheckSmartCardID
		{
			get
			{
				return this._InCheckSmartCardID;
			}
			set
			{
				if ((this._InCheckSmartCardID != value))
				{
					if (this._IN_CheckSmartCard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInCheckSmartCardIDChanging(value);
					this.SendPropertyChanging();
					this._InCheckSmartCardID = value;
					this.SendPropertyChanged("InCheckSmartCardID");
					this.OnInCheckSmartCardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InCheckSmartCardIDManual", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> InCheckSmartCardIDManual
		{
			get
			{
				return this._InCheckSmartCardIDManual;
			}
			set
			{
				if ((this._InCheckSmartCardIDManual != value))
				{
					this.OnInCheckSmartCardIDManualChanging(value);
					this.SendPropertyChanging();
					this._InCheckSmartCardIDManual = value;
					this.SendPropertyChanged("InCheckSmartCardIDManual");
					this.OnInCheckSmartCardIDManualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime NOT NULL")]
		public System.DateTime CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginBalance", DbType="Int")]
		public System.Nullable<int> BeginBalance
		{
			get
			{
				return this._BeginBalance;
			}
			set
			{
				if ((this._BeginBalance != value))
				{
					this.OnBeginBalanceChanging(value);
					this.SendPropertyChanging();
					this._BeginBalance = value;
					this.SendPropertyChanged("BeginBalance");
					this.OnBeginBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeAmount", DbType="Int")]
		public System.Nullable<int> ChargeAmount
		{
			get
			{
				return this._ChargeAmount;
			}
			set
			{
				if ((this._ChargeAmount != value))
				{
					this.OnChargeAmountChanging(value);
					this.SendPropertyChanging();
					this._ChargeAmount = value;
					this.SendPropertyChanged("ChargeAmount");
					this.OnChargeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Int")]
		public System.Nullable<int> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketTypeID", DbType="Int")]
		public System.Nullable<int> TicketTypeID
		{
			get
			{
				return this._TicketTypeID;
			}
			set
			{
				if ((this._TicketTypeID != value))
				{
					this.OnTicketTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TicketTypeID = value;
					this.SendPropertyChanged("TicketTypeID");
					this.OnTicketTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleTypeID", DbType="Int")]
		public System.Nullable<int> VehicleTypeID
		{
			get
			{
				return this._VehicleTypeID;
			}
			set
			{
				if ((this._VehicleTypeID != value))
				{
					this.OnVehicleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleTypeID = value;
					this.SendPropertyChanged("VehicleTypeID");
					this.OnVehicleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteID", DbType="Int")]
		public System.Nullable<int> RouteID
		{
			get
			{
				return this._RouteID;
			}
			set
			{
				if ((this._RouteID != value))
				{
					if (this._LS_Route.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRouteIDChanging(value);
					this.SendPropertyChanging();
					this._RouteID = value;
					this.SendPropertyChanged("RouteID");
					this.OnRouteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._LS_Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftID", DbType="Int")]
		public System.Nullable<int> ShiftID
		{
			get
			{
				return this._ShiftID;
			}
			set
			{
				if ((this._ShiftID != value))
				{
					this.OnShiftIDChanging(value);
					this.SendPropertyChanging();
					this._ShiftID = value;
					this.SendPropertyChanged("ShiftID");
					this.OnShiftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaneID", DbType="Int")]
		public System.Nullable<int> LaneID
		{
			get
			{
				return this._LaneID;
			}
			set
			{
				if ((this._LaneID != value))
				{
					if (this._LS_Lane.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLaneIDChanging(value);
					this.SendPropertyChanging();
					this._LaneID = value;
					this.SendPropertyChanged("LaneID");
					this.OnLaneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationID", DbType="Int")]
		public System.Nullable<int> StationID
		{
			get
			{
				return this._StationID;
			}
			set
			{
				if ((this._StationID != value))
				{
					if (this._LS_Station.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStationIDChanging(value);
					this.SendPropertyChanging();
					this._StationID = value;
					this.SendPropertyChanged("StationID");
					this.OnStationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", DbType="NVarChar(50)")]
		public string ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecogPlateNumber", DbType="NVarChar(15)")]
		public string RecogPlateNumber
		{
			get
			{
				return this._RecogPlateNumber;
			}
			set
			{
				if ((this._RecogPlateNumber != value))
				{
					this.OnRecogPlateNumberChanging(value);
					this.SendPropertyChanging();
					this._RecogPlateNumber = value;
					this.SendPropertyChanged("RecogPlateNumber");
					this.OnRecogPlateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecogResultType", DbType="SmallInt")]
		public System.Nullable<short> RecogResultType
		{
			get
			{
				return this._RecogResultType;
			}
			set
			{
				if ((this._RecogResultType != value))
				{
					this.OnRecogResultTypeChanging(value);
					this.SendPropertyChanging();
					this._RecogResultType = value;
					this.SendPropertyChanged("RecogResultType");
					this.OnRecogResultTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionStatus", DbType="SmallInt")]
		public System.Nullable<short> TransactionStatus
		{
			get
			{
				return this._TransactionStatus;
			}
			set
			{
				if ((this._TransactionStatus != value))
				{
					this.OnTransactionStatusChanging(value);
					this.SendPropertyChanging();
					this._TransactionStatus = value;
					this.SendPropertyChanged("TransactionStatus");
					this.OnTransactionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecheckStatus", DbType="SmallInt")]
		public System.Nullable<short> PrecheckStatus
		{
			get
			{
				return this._PrecheckStatus;
			}
			set
			{
				if ((this._PrecheckStatus != value))
				{
					this.OnPrecheckStatusChanging(value);
					this.SendPropertyChanging();
					this._PrecheckStatus = value;
					this.SendPropertyChanged("PrecheckStatus");
					this.OnPrecheckStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreSupervisionStatus", DbType="SmallInt")]
		public System.Nullable<short> PreSupervisionStatus
		{
			get
			{
				return this._PreSupervisionStatus;
			}
			set
			{
				if ((this._PreSupervisionStatus != value))
				{
					this.OnPreSupervisionStatusChanging(value);
					this.SendPropertyChanging();
					this._PreSupervisionStatus = value;
					this.SendPropertyChanged("PreSupervisionStatus");
					this.OnPreSupervisionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupervisionStatus", DbType="SmallInt")]
		public System.Nullable<short> SupervisionStatus
		{
			get
			{
				return this._SupervisionStatus;
			}
			set
			{
				if ((this._SupervisionStatus != value))
				{
					this.OnSupervisionStatusChanging(value);
					this.SendPropertyChanging();
					this._SupervisionStatus = value;
					this.SendPropertyChanged("SupervisionStatus");
					this.OnSupervisionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorID", DbType="Int")]
		public System.Nullable<int> ErrorID
		{
			get
			{
				return this._ErrorID;
			}
			set
			{
				if ((this._ErrorID != value))
				{
					this.OnErrorIDChanging(value);
					this.SendPropertyChanging();
					this._ErrorID = value;
					this.SendPropertyChanged("ErrorID");
					this.OnErrorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(100)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryPlateNumber", DbType="NVarChar(15)")]
		public string EntryPlateNumber
		{
			get
			{
				return this._EntryPlateNumber;
			}
			set
			{
				if ((this._EntryPlateNumber != value))
				{
					this.OnEntryPlateNumberChanging(value);
					this.SendPropertyChanging();
					this._EntryPlateNumber = value;
					this.SendPropertyChanged("EntryPlateNumber");
					this.OnEntryPlateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryLaneID", DbType="Int")]
		public System.Nullable<int> EntryLaneID
		{
			get
			{
				return this._EntryLaneID;
			}
			set
			{
				if ((this._EntryLaneID != value))
				{
					this.OnEntryLaneIDChanging(value);
					this.SendPropertyChanging();
					this._EntryLaneID = value;
					this.SendPropertyChanged("EntryLaneID");
					this.OnEntryLaneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F1", DbType="NVarChar(50)")]
		public string F1
		{
			get
			{
				return this._F1;
			}
			set
			{
				if ((this._F1 != value))
				{
					this.OnF1Changing(value);
					this.SendPropertyChanging();
					this._F1 = value;
					this.SendPropertyChanged("F1");
					this.OnF1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F2", DbType="NVarChar(50)")]
		public string F2
		{
			get
			{
				return this._F2;
			}
			set
			{
				if ((this._F2 != value))
				{
					this.OnF2Changing(value);
					this.SendPropertyChanging();
					this._F2 = value;
					this.SendPropertyChanged("F2");
					this.OnF2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IN_CheckSmartCard_OUT_CheckSmartCard", Storage="_IN_CheckSmartCard", ThisKey="InCheckSmartCardID", OtherKey="InCheckSmartCardID", IsForeignKey=true)]
		public IN_CheckSmartCard IN_CheckSmartCard
		{
			get
			{
				return this._IN_CheckSmartCard.Entity;
			}
			set
			{
				IN_CheckSmartCard previousValue = this._IN_CheckSmartCard.Entity;
				if (((previousValue != value) 
							|| (this._IN_CheckSmartCard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IN_CheckSmartCard.Entity = null;
						previousValue.OUT_CheckSmartCards.Remove(this);
					}
					this._IN_CheckSmartCard.Entity = value;
					if ((value != null))
					{
						value.OUT_CheckSmartCards.Add(this);
						this._InCheckSmartCardID = value.InCheckSmartCardID;
					}
					else
					{
						this._InCheckSmartCardID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("IN_CheckSmartCard");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Lane_OUT_CheckSmartCard", Storage="_LS_Lane", ThisKey="LaneID", OtherKey="LaneID", IsForeignKey=true)]
		public LS_Lane LS_Lane
		{
			get
			{
				return this._LS_Lane.Entity;
			}
			set
			{
				LS_Lane previousValue = this._LS_Lane.Entity;
				if (((previousValue != value) 
							|| (this._LS_Lane.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Lane.Entity = null;
						previousValue.OUT_CheckSmartCards.Remove(this);
					}
					this._LS_Lane.Entity = value;
					if ((value != null))
					{
						value.OUT_CheckSmartCards.Add(this);
						this._LaneID = value.LaneID;
					}
					else
					{
						this._LaneID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_Lane");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Station_OUT_CheckSmartCard", Storage="_LS_Station", ThisKey="StationID", OtherKey="StationID", IsForeignKey=true)]
		public LS_Station LS_Station
		{
			get
			{
				return this._LS_Station.Entity;
			}
			set
			{
				LS_Station previousValue = this._LS_Station.Entity;
				if (((previousValue != value) 
							|| (this._LS_Station.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Station.Entity = null;
						previousValue.OUT_CheckSmartCards.Remove(this);
					}
					this._LS_Station.Entity = value;
					if ((value != null))
					{
						value.OUT_CheckSmartCards.Add(this);
						this._StationID = value.StationID;
					}
					else
					{
						this._StationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_Station");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Route_OUT_CheckSmartCard", Storage="_LS_Route", ThisKey="RouteID", OtherKey="RouteID", IsForeignKey=true)]
		public LS_Route LS_Route
		{
			get
			{
				return this._LS_Route.Entity;
			}
			set
			{
				LS_Route previousValue = this._LS_Route.Entity;
				if (((previousValue != value) 
							|| (this._LS_Route.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Route.Entity = null;
						previousValue.OUT_CheckSmartCards.Remove(this);
					}
					this._LS_Route.Entity = value;
					if ((value != null))
					{
						value.OUT_CheckSmartCards.Add(this);
						this._RouteID = value.RouteID;
					}
					else
					{
						this._RouteID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_Route");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Employee_OUT_CheckSmartCard", Storage="_LS_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public LS_Employee LS_Employee
		{
			get
			{
				return this._LS_Employee.Entity;
			}
			set
			{
				LS_Employee previousValue = this._LS_Employee.Entity;
				if (((previousValue != value) 
							|| (this._LS_Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Employee.Entity = null;
						previousValue.OUT_CheckSmartCards.Remove(this);
					}
					this._LS_Employee.Entity = value;
					if ((value != null))
					{
						value.OUT_CheckSmartCards.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AC_PPCWhiteList")]
	public partial class AC_PPCWhiteList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _CardID;
		
		private System.Nullable<int> _VehicleTypeID;
		
		private string _FormatID;
		
		private string _VehiclePlateIn;
		
		private System.Nullable<int> _StationIDIn;
		
		private System.Nullable<int> _LaneIDIn;
		
		private System.Nullable<System.DateTime> _LastCheckDateIn;
		
		private string _VehiclePlateOut;
		
		private System.Nullable<int> _StationIDOut;
		
		private System.Nullable<int> _LaneIDOut;
		
		private System.Nullable<System.DateTime> _LastCheckDateOut;
		
		private System.Nullable<int> _RouteID;
		
		private System.Nullable<int> _Hour;
		
		private System.Nullable<int> _Day;
		
		private System.Nullable<int> _Month;
		
		private System.Nullable<int> _Year;
		
		private System.Nullable<bool> _IsLock;
		
		private System.Nullable<int> _LockEmployeeID;
		
		private System.Nullable<System.DateTime> _LockDate;
		
		private System.Nullable<int> _UnlockEmployeeID;
		
		private System.Nullable<System.DateTime> _UnlockDate;
		
		private System.Nullable<bool> _IsLost;
		
		private string _Note;
		
		private string _ImageIDIn;
		
		private string _ImageIDOut;
		
		private EntityRef<LS_VehicleType> _LS_VehicleType;
		
		private EntityRef<LS_Route> _LS_Route;
		
		private EntityRef<LS_Lane> _LS_Lane1;
		
		private EntityRef<LS_Lane> _LS_Lane;
		
		private EntityRef<LS_Station> _LS_Station1;
		
		private EntityRef<LS_Station> _LS_Station;
		
		private EntityRef<LS_Employee> _LS_Employee1;
		
		private EntityRef<LS_Employee> _LS_Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCardIDChanging(string value);
    partial void OnCardIDChanged();
    partial void OnVehicleTypeIDChanging(System.Nullable<int> value);
    partial void OnVehicleTypeIDChanged();
    partial void OnFormatIDChanging(string value);
    partial void OnFormatIDChanged();
    partial void OnVehiclePlateInChanging(string value);
    partial void OnVehiclePlateInChanged();
    partial void OnStationIDInChanging(System.Nullable<int> value);
    partial void OnStationIDInChanged();
    partial void OnLaneIDInChanging(System.Nullable<int> value);
    partial void OnLaneIDInChanged();
    partial void OnLastCheckDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnLastCheckDateInChanged();
    partial void OnVehiclePlateOutChanging(string value);
    partial void OnVehiclePlateOutChanged();
    partial void OnStationIDOutChanging(System.Nullable<int> value);
    partial void OnStationIDOutChanged();
    partial void OnLaneIDOutChanging(System.Nullable<int> value);
    partial void OnLaneIDOutChanged();
    partial void OnLastCheckDateOutChanging(System.Nullable<System.DateTime> value);
    partial void OnLastCheckDateOutChanged();
    partial void OnRouteIDChanging(System.Nullable<int> value);
    partial void OnRouteIDChanged();
    partial void OnHourChanging(System.Nullable<int> value);
    partial void OnHourChanged();
    partial void OnDayChanging(System.Nullable<int> value);
    partial void OnDayChanged();
    partial void OnMonthChanging(System.Nullable<int> value);
    partial void OnMonthChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnIsLockChanging(System.Nullable<bool> value);
    partial void OnIsLockChanged();
    partial void OnLockEmployeeIDChanging(System.Nullable<int> value);
    partial void OnLockEmployeeIDChanged();
    partial void OnLockDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLockDateChanged();
    partial void OnUnlockEmployeeIDChanging(System.Nullable<int> value);
    partial void OnUnlockEmployeeIDChanged();
    partial void OnUnlockDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUnlockDateChanged();
    partial void OnIsLostChanging(System.Nullable<bool> value);
    partial void OnIsLostChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnImageIDInChanging(string value);
    partial void OnImageIDInChanged();
    partial void OnImageIDOutChanging(string value);
    partial void OnImageIDOutChanged();
    #endregion
		
		public AC_PPCWhiteList()
		{
			this._LS_VehicleType = default(EntityRef<LS_VehicleType>);
			this._LS_Route = default(EntityRef<LS_Route>);
			this._LS_Lane1 = default(EntityRef<LS_Lane>);
			this._LS_Lane = default(EntityRef<LS_Lane>);
			this._LS_Station1 = default(EntityRef<LS_Station>);
			this._LS_Station = default(EntityRef<LS_Station>);
			this._LS_Employee1 = default(EntityRef<LS_Employee>);
			this._LS_Employee = default(EntityRef<LS_Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CardID
		{
			get
			{
				return this._CardID;
			}
			set
			{
				if ((this._CardID != value))
				{
					this.OnCardIDChanging(value);
					this.SendPropertyChanging();
					this._CardID = value;
					this.SendPropertyChanged("CardID");
					this.OnCardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleTypeID", DbType="Int")]
		public System.Nullable<int> VehicleTypeID
		{
			get
			{
				return this._VehicleTypeID;
			}
			set
			{
				if ((this._VehicleTypeID != value))
				{
					if (this._LS_VehicleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleTypeID = value;
					this.SendPropertyChanged("VehicleTypeID");
					this.OnVehicleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormatID", DbType="VarChar(20)")]
		public string FormatID
		{
			get
			{
				return this._FormatID;
			}
			set
			{
				if ((this._FormatID != value))
				{
					this.OnFormatIDChanging(value);
					this.SendPropertyChanging();
					this._FormatID = value;
					this.SendPropertyChanged("FormatID");
					this.OnFormatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehiclePlateIn", DbType="NVarChar(20)")]
		public string VehiclePlateIn
		{
			get
			{
				return this._VehiclePlateIn;
			}
			set
			{
				if ((this._VehiclePlateIn != value))
				{
					this.OnVehiclePlateInChanging(value);
					this.SendPropertyChanging();
					this._VehiclePlateIn = value;
					this.SendPropertyChanged("VehiclePlateIn");
					this.OnVehiclePlateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationIDIn", DbType="Int")]
		public System.Nullable<int> StationIDIn
		{
			get
			{
				return this._StationIDIn;
			}
			set
			{
				if ((this._StationIDIn != value))
				{
					if (this._LS_Station1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStationIDInChanging(value);
					this.SendPropertyChanging();
					this._StationIDIn = value;
					this.SendPropertyChanged("StationIDIn");
					this.OnStationIDInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaneIDIn", DbType="Int")]
		public System.Nullable<int> LaneIDIn
		{
			get
			{
				return this._LaneIDIn;
			}
			set
			{
				if ((this._LaneIDIn != value))
				{
					if (this._LS_Lane1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLaneIDInChanging(value);
					this.SendPropertyChanging();
					this._LaneIDIn = value;
					this.SendPropertyChanged("LaneIDIn");
					this.OnLaneIDInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCheckDateIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCheckDateIn
		{
			get
			{
				return this._LastCheckDateIn;
			}
			set
			{
				if ((this._LastCheckDateIn != value))
				{
					this.OnLastCheckDateInChanging(value);
					this.SendPropertyChanging();
					this._LastCheckDateIn = value;
					this.SendPropertyChanged("LastCheckDateIn");
					this.OnLastCheckDateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehiclePlateOut", DbType="NVarChar(20)")]
		public string VehiclePlateOut
		{
			get
			{
				return this._VehiclePlateOut;
			}
			set
			{
				if ((this._VehiclePlateOut != value))
				{
					this.OnVehiclePlateOutChanging(value);
					this.SendPropertyChanging();
					this._VehiclePlateOut = value;
					this.SendPropertyChanged("VehiclePlateOut");
					this.OnVehiclePlateOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationIDOut", DbType="Int")]
		public System.Nullable<int> StationIDOut
		{
			get
			{
				return this._StationIDOut;
			}
			set
			{
				if ((this._StationIDOut != value))
				{
					if (this._LS_Station.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStationIDOutChanging(value);
					this.SendPropertyChanging();
					this._StationIDOut = value;
					this.SendPropertyChanged("StationIDOut");
					this.OnStationIDOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaneIDOut", DbType="Int")]
		public System.Nullable<int> LaneIDOut
		{
			get
			{
				return this._LaneIDOut;
			}
			set
			{
				if ((this._LaneIDOut != value))
				{
					if (this._LS_Lane.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLaneIDOutChanging(value);
					this.SendPropertyChanging();
					this._LaneIDOut = value;
					this.SendPropertyChanged("LaneIDOut");
					this.OnLaneIDOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCheckDateOut", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCheckDateOut
		{
			get
			{
				return this._LastCheckDateOut;
			}
			set
			{
				if ((this._LastCheckDateOut != value))
				{
					this.OnLastCheckDateOutChanging(value);
					this.SendPropertyChanging();
					this._LastCheckDateOut = value;
					this.SendPropertyChanged("LastCheckDateOut");
					this.OnLastCheckDateOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteID", DbType="Int")]
		public System.Nullable<int> RouteID
		{
			get
			{
				return this._RouteID;
			}
			set
			{
				if ((this._RouteID != value))
				{
					if (this._LS_Route.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRouteIDChanging(value);
					this.SendPropertyChanging();
					this._RouteID = value;
					this.SendPropertyChanged("RouteID");
					this.OnRouteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hour", DbType="Int")]
		public System.Nullable<int> Hour
		{
			get
			{
				return this._Hour;
			}
			set
			{
				if ((this._Hour != value))
				{
					this.OnHourChanging(value);
					this.SendPropertyChanging();
					this._Hour = value;
					this.SendPropertyChanged("Hour");
					this.OnHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="Int")]
		public System.Nullable<int> Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int")]
		public System.Nullable<int> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLock", DbType="Bit")]
		public System.Nullable<bool> IsLock
		{
			get
			{
				return this._IsLock;
			}
			set
			{
				if ((this._IsLock != value))
				{
					this.OnIsLockChanging(value);
					this.SendPropertyChanging();
					this._IsLock = value;
					this.SendPropertyChanged("IsLock");
					this.OnIsLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockEmployeeID", DbType="Int")]
		public System.Nullable<int> LockEmployeeID
		{
			get
			{
				return this._LockEmployeeID;
			}
			set
			{
				if ((this._LockEmployeeID != value))
				{
					if (this._LS_Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLockEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._LockEmployeeID = value;
					this.SendPropertyChanged("LockEmployeeID");
					this.OnLockEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockDate
		{
			get
			{
				return this._LockDate;
			}
			set
			{
				if ((this._LockDate != value))
				{
					this.OnLockDateChanging(value);
					this.SendPropertyChanging();
					this._LockDate = value;
					this.SendPropertyChanged("LockDate");
					this.OnLockDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlockEmployeeID", DbType="Int")]
		public System.Nullable<int> UnlockEmployeeID
		{
			get
			{
				return this._UnlockEmployeeID;
			}
			set
			{
				if ((this._UnlockEmployeeID != value))
				{
					if (this._LS_Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnlockEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._UnlockEmployeeID = value;
					this.SendPropertyChanged("UnlockEmployeeID");
					this.OnUnlockEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlockDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UnlockDate
		{
			get
			{
				return this._UnlockDate;
			}
			set
			{
				if ((this._UnlockDate != value))
				{
					this.OnUnlockDateChanging(value);
					this.SendPropertyChanging();
					this._UnlockDate = value;
					this.SendPropertyChanged("UnlockDate");
					this.OnUnlockDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLost", DbType="Bit")]
		public System.Nullable<bool> IsLost
		{
			get
			{
				return this._IsLost;
			}
			set
			{
				if ((this._IsLost != value))
				{
					this.OnIsLostChanging(value);
					this.SendPropertyChanging();
					this._IsLost = value;
					this.SendPropertyChanged("IsLost");
					this.OnIsLostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(200)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageIDIn", DbType="VarChar(50)")]
		public string ImageIDIn
		{
			get
			{
				return this._ImageIDIn;
			}
			set
			{
				if ((this._ImageIDIn != value))
				{
					this.OnImageIDInChanging(value);
					this.SendPropertyChanging();
					this._ImageIDIn = value;
					this.SendPropertyChanged("ImageIDIn");
					this.OnImageIDInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageIDOut", DbType="VarChar(50)")]
		public string ImageIDOut
		{
			get
			{
				return this._ImageIDOut;
			}
			set
			{
				if ((this._ImageIDOut != value))
				{
					this.OnImageIDOutChanging(value);
					this.SendPropertyChanging();
					this._ImageIDOut = value;
					this.SendPropertyChanged("ImageIDOut");
					this.OnImageIDOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_VehicleType_AC_PPCWhiteList", Storage="_LS_VehicleType", ThisKey="VehicleTypeID", OtherKey="VehicleTypeID", IsForeignKey=true)]
		public LS_VehicleType LS_VehicleType
		{
			get
			{
				return this._LS_VehicleType.Entity;
			}
			set
			{
				LS_VehicleType previousValue = this._LS_VehicleType.Entity;
				if (((previousValue != value) 
							|| (this._LS_VehicleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_VehicleType.Entity = null;
						previousValue.AC_PPCWhiteLists.Remove(this);
					}
					this._LS_VehicleType.Entity = value;
					if ((value != null))
					{
						value.AC_PPCWhiteLists.Add(this);
						this._VehicleTypeID = value.VehicleTypeID;
					}
					else
					{
						this._VehicleTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_VehicleType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Route_AC_PPCWhiteList", Storage="_LS_Route", ThisKey="RouteID", OtherKey="RouteID", IsForeignKey=true)]
		public LS_Route LS_Route
		{
			get
			{
				return this._LS_Route.Entity;
			}
			set
			{
				LS_Route previousValue = this._LS_Route.Entity;
				if (((previousValue != value) 
							|| (this._LS_Route.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Route.Entity = null;
						previousValue.AC_PPCWhiteLists.Remove(this);
					}
					this._LS_Route.Entity = value;
					if ((value != null))
					{
						value.AC_PPCWhiteLists.Add(this);
						this._RouteID = value.RouteID;
					}
					else
					{
						this._RouteID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_Route");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Lane_AC_PPCWhiteList", Storage="_LS_Lane1", ThisKey="LaneIDIn", OtherKey="LaneID", IsForeignKey=true)]
		public LS_Lane LS_Lane1
		{
			get
			{
				return this._LS_Lane1.Entity;
			}
			set
			{
				LS_Lane previousValue = this._LS_Lane1.Entity;
				if (((previousValue != value) 
							|| (this._LS_Lane1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Lane1.Entity = null;
						previousValue.AC_PPCWhiteLists1.Remove(this);
					}
					this._LS_Lane1.Entity = value;
					if ((value != null))
					{
						value.AC_PPCWhiteLists1.Add(this);
						this._LaneIDIn = value.LaneID;
					}
					else
					{
						this._LaneIDIn = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_Lane1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Lane_AC_PPCWhiteList1", Storage="_LS_Lane", ThisKey="LaneIDOut", OtherKey="LaneID", IsForeignKey=true)]
		public LS_Lane LS_Lane
		{
			get
			{
				return this._LS_Lane.Entity;
			}
			set
			{
				LS_Lane previousValue = this._LS_Lane.Entity;
				if (((previousValue != value) 
							|| (this._LS_Lane.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Lane.Entity = null;
						previousValue.AC_PPCWhiteLists.Remove(this);
					}
					this._LS_Lane.Entity = value;
					if ((value != null))
					{
						value.AC_PPCWhiteLists.Add(this);
						this._LaneIDOut = value.LaneID;
					}
					else
					{
						this._LaneIDOut = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_Lane");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Station_AC_PPCWhiteList", Storage="_LS_Station1", ThisKey="StationIDIn", OtherKey="StationID", IsForeignKey=true)]
		public LS_Station LS_Station1
		{
			get
			{
				return this._LS_Station1.Entity;
			}
			set
			{
				LS_Station previousValue = this._LS_Station1.Entity;
				if (((previousValue != value) 
							|| (this._LS_Station1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Station1.Entity = null;
						previousValue.AC_PPCWhiteLists1.Remove(this);
					}
					this._LS_Station1.Entity = value;
					if ((value != null))
					{
						value.AC_PPCWhiteLists1.Add(this);
						this._StationIDIn = value.StationID;
					}
					else
					{
						this._StationIDIn = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_Station1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Station_AC_PPCWhiteList1", Storage="_LS_Station", ThisKey="StationIDOut", OtherKey="StationID", IsForeignKey=true)]
		public LS_Station LS_Station
		{
			get
			{
				return this._LS_Station.Entity;
			}
			set
			{
				LS_Station previousValue = this._LS_Station.Entity;
				if (((previousValue != value) 
							|| (this._LS_Station.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Station.Entity = null;
						previousValue.AC_PPCWhiteLists.Remove(this);
					}
					this._LS_Station.Entity = value;
					if ((value != null))
					{
						value.AC_PPCWhiteLists.Add(this);
						this._StationIDOut = value.StationID;
					}
					else
					{
						this._StationIDOut = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_Station");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Employee_AC_PPCWhiteList", Storage="_LS_Employee1", ThisKey="LockEmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public LS_Employee LS_Employee1
		{
			get
			{
				return this._LS_Employee1.Entity;
			}
			set
			{
				LS_Employee previousValue = this._LS_Employee1.Entity;
				if (((previousValue != value) 
							|| (this._LS_Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Employee1.Entity = null;
						previousValue.AC_PPCWhiteLists1.Remove(this);
					}
					this._LS_Employee1.Entity = value;
					if ((value != null))
					{
						value.AC_PPCWhiteLists1.Add(this);
						this._LockEmployeeID = value.EmployeeID;
					}
					else
					{
						this._LockEmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_Employee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Employee_AC_PPCWhiteList1", Storage="_LS_Employee", ThisKey="UnlockEmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public LS_Employee LS_Employee
		{
			get
			{
				return this._LS_Employee.Entity;
			}
			set
			{
				LS_Employee previousValue = this._LS_Employee.Entity;
				if (((previousValue != value) 
							|| (this._LS_Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Employee.Entity = null;
						previousValue.AC_PPCWhiteLists.Remove(this);
					}
					this._LS_Employee.Entity = value;
					if ((value != null))
					{
						value.AC_PPCWhiteLists.Add(this);
						this._UnlockEmployeeID = value.EmployeeID;
					}
					else
					{
						this._UnlockEmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LS_Card")]
	public partial class LS_Card : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CardTypeID;
		
		private System.Nullable<int> _ProductTypeID;
		
		private string _CardTypeCode;
		
		private string _Name;
		
		private string _Note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCardTypeIDChanging(int value);
    partial void OnCardTypeIDChanged();
    partial void OnProductTypeIDChanging(System.Nullable<int> value);
    partial void OnProductTypeIDChanged();
    partial void OnCardTypeCodeChanging(string value);
    partial void OnCardTypeCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public LS_Card()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CardTypeID
		{
			get
			{
				return this._CardTypeID;
			}
			set
			{
				if ((this._CardTypeID != value))
				{
					this.OnCardTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CardTypeID = value;
					this.SendPropertyChanged("CardTypeID");
					this.OnCardTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeID", DbType="Int")]
		public System.Nullable<int> ProductTypeID
		{
			get
			{
				return this._ProductTypeID;
			}
			set
			{
				if ((this._ProductTypeID != value))
				{
					this.OnProductTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeID = value;
					this.SendPropertyChanged("ProductTypeID");
					this.OnProductTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardTypeCode", DbType="NVarChar(20)")]
		public string CardTypeCode
		{
			get
			{
				return this._CardTypeCode;
			}
			set
			{
				if ((this._CardTypeCode != value))
				{
					this.OnCardTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._CardTypeCode = value;
					this.SendPropertyChanged("CardTypeCode");
					this.OnCardTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(200)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AC_TollWhiteList")]
	public partial class AC_TollWhiteList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _CardID;
		
		private System.Nullable<int> _VehicleTypeID;
		
		private string _FormatID;
		
		private string _VehiclePlateIn;
		
		private System.Nullable<int> _StationIDIn;
		
		private System.Nullable<int> _LaneIDIn;
		
		private System.Nullable<System.DateTime> _LastCheckDateIn;
		
		private string _VehiclePlateOut;
		
		private System.Nullable<int> _StationIDOut;
		
		private System.Nullable<int> _LaneIDOut;
		
		private System.Nullable<System.DateTime> _LastCheckDateOut;
		
		private System.Nullable<int> _RouteID;
		
		private System.Nullable<int> _Day;
		
		private System.Nullable<int> _Month;
		
		private System.Nullable<int> _Year;
		
		private System.Nullable<bool> _IsLock;
		
		private System.Nullable<int> _LockEmployeeID;
		
		private System.Nullable<System.DateTime> _LockDate;
		
		private System.Nullable<int> _UnlockEmployeeID;
		
		private System.Nullable<System.DateTime> _UnlockDate;
		
		private System.Nullable<bool> _IsLost;
		
		private string _Note;
		
		private string _ImageIDIn;
		
		private string _ImageIDOut;
		
		private EntityRef<LS_VehicleType> _LS_VehicleType;
		
		private EntityRef<LS_Route> _LS_Route;
		
		private EntityRef<LS_Lane> _LS_Lane1;
		
		private EntityRef<LS_Lane> _LS_Lane;
		
		private EntityRef<LS_Station> _LS_Station1;
		
		private EntityRef<LS_Station> _LS_Station;
		
		private EntityRef<LS_Employee> _LS_Employee1;
		
		private EntityRef<LS_Employee> _LS_Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCardIDChanging(string value);
    partial void OnCardIDChanged();
    partial void OnVehicleTypeIDChanging(System.Nullable<int> value);
    partial void OnVehicleTypeIDChanged();
    partial void OnFormatIDChanging(string value);
    partial void OnFormatIDChanged();
    partial void OnVehiclePlateInChanging(string value);
    partial void OnVehiclePlateInChanged();
    partial void OnStationIDInChanging(System.Nullable<int> value);
    partial void OnStationIDInChanged();
    partial void OnLaneIDInChanging(System.Nullable<int> value);
    partial void OnLaneIDInChanged();
    partial void OnLastCheckDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnLastCheckDateInChanged();
    partial void OnVehiclePlateOutChanging(string value);
    partial void OnVehiclePlateOutChanged();
    partial void OnStationIDOutChanging(System.Nullable<int> value);
    partial void OnStationIDOutChanged();
    partial void OnLaneIDOutChanging(System.Nullable<int> value);
    partial void OnLaneIDOutChanged();
    partial void OnLastCheckDateOutChanging(System.Nullable<System.DateTime> value);
    partial void OnLastCheckDateOutChanged();
    partial void OnRouteIDChanging(System.Nullable<int> value);
    partial void OnRouteIDChanged();
    partial void OnDayChanging(System.Nullable<int> value);
    partial void OnDayChanged();
    partial void OnMonthChanging(System.Nullable<int> value);
    partial void OnMonthChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnIsLockChanging(System.Nullable<bool> value);
    partial void OnIsLockChanged();
    partial void OnLockEmployeeIDChanging(System.Nullable<int> value);
    partial void OnLockEmployeeIDChanged();
    partial void OnLockDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLockDateChanged();
    partial void OnUnlockEmployeeIDChanging(System.Nullable<int> value);
    partial void OnUnlockEmployeeIDChanged();
    partial void OnUnlockDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUnlockDateChanged();
    partial void OnIsLostChanging(System.Nullable<bool> value);
    partial void OnIsLostChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnImageIDInChanging(string value);
    partial void OnImageIDInChanged();
    partial void OnImageIDOutChanging(string value);
    partial void OnImageIDOutChanged();
    #endregion
		
		public AC_TollWhiteList()
		{
			this._LS_VehicleType = default(EntityRef<LS_VehicleType>);
			this._LS_Route = default(EntityRef<LS_Route>);
			this._LS_Lane1 = default(EntityRef<LS_Lane>);
			this._LS_Lane = default(EntityRef<LS_Lane>);
			this._LS_Station1 = default(EntityRef<LS_Station>);
			this._LS_Station = default(EntityRef<LS_Station>);
			this._LS_Employee1 = default(EntityRef<LS_Employee>);
			this._LS_Employee = default(EntityRef<LS_Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CardID
		{
			get
			{
				return this._CardID;
			}
			set
			{
				if ((this._CardID != value))
				{
					this.OnCardIDChanging(value);
					this.SendPropertyChanging();
					this._CardID = value;
					this.SendPropertyChanged("CardID");
					this.OnCardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleTypeID", DbType="Int")]
		public System.Nullable<int> VehicleTypeID
		{
			get
			{
				return this._VehicleTypeID;
			}
			set
			{
				if ((this._VehicleTypeID != value))
				{
					if (this._LS_VehicleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleTypeID = value;
					this.SendPropertyChanged("VehicleTypeID");
					this.OnVehicleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormatID", DbType="VarChar(20)")]
		public string FormatID
		{
			get
			{
				return this._FormatID;
			}
			set
			{
				if ((this._FormatID != value))
				{
					this.OnFormatIDChanging(value);
					this.SendPropertyChanging();
					this._FormatID = value;
					this.SendPropertyChanged("FormatID");
					this.OnFormatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehiclePlateIn", DbType="NVarChar(20)")]
		public string VehiclePlateIn
		{
			get
			{
				return this._VehiclePlateIn;
			}
			set
			{
				if ((this._VehiclePlateIn != value))
				{
					this.OnVehiclePlateInChanging(value);
					this.SendPropertyChanging();
					this._VehiclePlateIn = value;
					this.SendPropertyChanged("VehiclePlateIn");
					this.OnVehiclePlateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationIDIn", DbType="Int")]
		public System.Nullable<int> StationIDIn
		{
			get
			{
				return this._StationIDIn;
			}
			set
			{
				if ((this._StationIDIn != value))
				{
					if (this._LS_Station1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStationIDInChanging(value);
					this.SendPropertyChanging();
					this._StationIDIn = value;
					this.SendPropertyChanged("StationIDIn");
					this.OnStationIDInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaneIDIn", DbType="Int")]
		public System.Nullable<int> LaneIDIn
		{
			get
			{
				return this._LaneIDIn;
			}
			set
			{
				if ((this._LaneIDIn != value))
				{
					if (this._LS_Lane1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLaneIDInChanging(value);
					this.SendPropertyChanging();
					this._LaneIDIn = value;
					this.SendPropertyChanged("LaneIDIn");
					this.OnLaneIDInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCheckDateIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCheckDateIn
		{
			get
			{
				return this._LastCheckDateIn;
			}
			set
			{
				if ((this._LastCheckDateIn != value))
				{
					this.OnLastCheckDateInChanging(value);
					this.SendPropertyChanging();
					this._LastCheckDateIn = value;
					this.SendPropertyChanged("LastCheckDateIn");
					this.OnLastCheckDateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehiclePlateOut", DbType="NVarChar(20)")]
		public string VehiclePlateOut
		{
			get
			{
				return this._VehiclePlateOut;
			}
			set
			{
				if ((this._VehiclePlateOut != value))
				{
					this.OnVehiclePlateOutChanging(value);
					this.SendPropertyChanging();
					this._VehiclePlateOut = value;
					this.SendPropertyChanged("VehiclePlateOut");
					this.OnVehiclePlateOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationIDOut", DbType="Int")]
		public System.Nullable<int> StationIDOut
		{
			get
			{
				return this._StationIDOut;
			}
			set
			{
				if ((this._StationIDOut != value))
				{
					this.OnStationIDOutChanging(value);
					this.SendPropertyChanging();
					this._StationIDOut = value;
					this.SendPropertyChanged("StationIDOut");
					this.OnStationIDOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaneIDOut", DbType="Int")]
		public System.Nullable<int> LaneIDOut
		{
			get
			{
				return this._LaneIDOut;
			}
			set
			{
				if ((this._LaneIDOut != value))
				{
					if ((this._LS_Lane.HasLoadedOrAssignedValue || this._LS_Station.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLaneIDOutChanging(value);
					this.SendPropertyChanging();
					this._LaneIDOut = value;
					this.SendPropertyChanged("LaneIDOut");
					this.OnLaneIDOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCheckDateOut", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCheckDateOut
		{
			get
			{
				return this._LastCheckDateOut;
			}
			set
			{
				if ((this._LastCheckDateOut != value))
				{
					this.OnLastCheckDateOutChanging(value);
					this.SendPropertyChanging();
					this._LastCheckDateOut = value;
					this.SendPropertyChanged("LastCheckDateOut");
					this.OnLastCheckDateOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteID", DbType="Int")]
		public System.Nullable<int> RouteID
		{
			get
			{
				return this._RouteID;
			}
			set
			{
				if ((this._RouteID != value))
				{
					if (this._LS_Route.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRouteIDChanging(value);
					this.SendPropertyChanging();
					this._RouteID = value;
					this.SendPropertyChanged("RouteID");
					this.OnRouteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="Int")]
		public System.Nullable<int> Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int")]
		public System.Nullable<int> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLock", DbType="Bit")]
		public System.Nullable<bool> IsLock
		{
			get
			{
				return this._IsLock;
			}
			set
			{
				if ((this._IsLock != value))
				{
					this.OnIsLockChanging(value);
					this.SendPropertyChanging();
					this._IsLock = value;
					this.SendPropertyChanged("IsLock");
					this.OnIsLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockEmployeeID", DbType="Int")]
		public System.Nullable<int> LockEmployeeID
		{
			get
			{
				return this._LockEmployeeID;
			}
			set
			{
				if ((this._LockEmployeeID != value))
				{
					if (this._LS_Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLockEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._LockEmployeeID = value;
					this.SendPropertyChanged("LockEmployeeID");
					this.OnLockEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockDate
		{
			get
			{
				return this._LockDate;
			}
			set
			{
				if ((this._LockDate != value))
				{
					this.OnLockDateChanging(value);
					this.SendPropertyChanging();
					this._LockDate = value;
					this.SendPropertyChanged("LockDate");
					this.OnLockDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlockEmployeeID", DbType="Int")]
		public System.Nullable<int> UnlockEmployeeID
		{
			get
			{
				return this._UnlockEmployeeID;
			}
			set
			{
				if ((this._UnlockEmployeeID != value))
				{
					if (this._LS_Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnlockEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._UnlockEmployeeID = value;
					this.SendPropertyChanged("UnlockEmployeeID");
					this.OnUnlockEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlockDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UnlockDate
		{
			get
			{
				return this._UnlockDate;
			}
			set
			{
				if ((this._UnlockDate != value))
				{
					this.OnUnlockDateChanging(value);
					this.SendPropertyChanging();
					this._UnlockDate = value;
					this.SendPropertyChanged("UnlockDate");
					this.OnUnlockDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLost", DbType="Bit")]
		public System.Nullable<bool> IsLost
		{
			get
			{
				return this._IsLost;
			}
			set
			{
				if ((this._IsLost != value))
				{
					this.OnIsLostChanging(value);
					this.SendPropertyChanging();
					this._IsLost = value;
					this.SendPropertyChanged("IsLost");
					this.OnIsLostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(200)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageIDIn", DbType="VarChar(50)")]
		public string ImageIDIn
		{
			get
			{
				return this._ImageIDIn;
			}
			set
			{
				if ((this._ImageIDIn != value))
				{
					this.OnImageIDInChanging(value);
					this.SendPropertyChanging();
					this._ImageIDIn = value;
					this.SendPropertyChanged("ImageIDIn");
					this.OnImageIDInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageIDOut", DbType="VarChar(50)")]
		public string ImageIDOut
		{
			get
			{
				return this._ImageIDOut;
			}
			set
			{
				if ((this._ImageIDOut != value))
				{
					this.OnImageIDOutChanging(value);
					this.SendPropertyChanging();
					this._ImageIDOut = value;
					this.SendPropertyChanged("ImageIDOut");
					this.OnImageIDOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_VehicleType_AC_TollWhiteList", Storage="_LS_VehicleType", ThisKey="VehicleTypeID", OtherKey="VehicleTypeID", IsForeignKey=true)]
		public LS_VehicleType LS_VehicleType
		{
			get
			{
				return this._LS_VehicleType.Entity;
			}
			set
			{
				LS_VehicleType previousValue = this._LS_VehicleType.Entity;
				if (((previousValue != value) 
							|| (this._LS_VehicleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_VehicleType.Entity = null;
						previousValue.AC_TollWhiteLists.Remove(this);
					}
					this._LS_VehicleType.Entity = value;
					if ((value != null))
					{
						value.AC_TollWhiteLists.Add(this);
						this._VehicleTypeID = value.VehicleTypeID;
					}
					else
					{
						this._VehicleTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_VehicleType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Route_AC_TollWhiteList", Storage="_LS_Route", ThisKey="RouteID", OtherKey="RouteID", IsForeignKey=true)]
		public LS_Route LS_Route
		{
			get
			{
				return this._LS_Route.Entity;
			}
			set
			{
				LS_Route previousValue = this._LS_Route.Entity;
				if (((previousValue != value) 
							|| (this._LS_Route.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Route.Entity = null;
						previousValue.AC_TollWhiteLists.Remove(this);
					}
					this._LS_Route.Entity = value;
					if ((value != null))
					{
						value.AC_TollWhiteLists.Add(this);
						this._RouteID = value.RouteID;
					}
					else
					{
						this._RouteID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_Route");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Lane_AC_TollWhiteList", Storage="_LS_Lane1", ThisKey="LaneIDIn", OtherKey="LaneID", IsForeignKey=true)]
		public LS_Lane LS_Lane1
		{
			get
			{
				return this._LS_Lane1.Entity;
			}
			set
			{
				LS_Lane previousValue = this._LS_Lane1.Entity;
				if (((previousValue != value) 
							|| (this._LS_Lane1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Lane1.Entity = null;
						previousValue.AC_TollWhiteLists1.Remove(this);
					}
					this._LS_Lane1.Entity = value;
					if ((value != null))
					{
						value.AC_TollWhiteLists1.Add(this);
						this._LaneIDIn = value.LaneID;
					}
					else
					{
						this._LaneIDIn = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_Lane1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Lane_AC_TollWhiteList1", Storage="_LS_Lane", ThisKey="LaneIDOut", OtherKey="LaneID", IsForeignKey=true)]
		public LS_Lane LS_Lane
		{
			get
			{
				return this._LS_Lane.Entity;
			}
			set
			{
				LS_Lane previousValue = this._LS_Lane.Entity;
				if (((previousValue != value) 
							|| (this._LS_Lane.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Lane.Entity = null;
						previousValue.AC_TollWhiteLists.Remove(this);
					}
					this._LS_Lane.Entity = value;
					if ((value != null))
					{
						value.AC_TollWhiteLists.Add(this);
						this._LaneIDOut = value.LaneID;
					}
					else
					{
						this._LaneIDOut = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_Lane");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Station_AC_TollWhiteList", Storage="_LS_Station1", ThisKey="StationIDIn", OtherKey="StationID", IsForeignKey=true)]
		public LS_Station LS_Station1
		{
			get
			{
				return this._LS_Station1.Entity;
			}
			set
			{
				LS_Station previousValue = this._LS_Station1.Entity;
				if (((previousValue != value) 
							|| (this._LS_Station1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Station1.Entity = null;
						previousValue.AC_TollWhiteLists1.Remove(this);
					}
					this._LS_Station1.Entity = value;
					if ((value != null))
					{
						value.AC_TollWhiteLists1.Add(this);
						this._StationIDIn = value.StationID;
					}
					else
					{
						this._StationIDIn = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_Station1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Station_AC_TollWhiteList1", Storage="_LS_Station", ThisKey="LaneIDOut", OtherKey="StationID", IsForeignKey=true)]
		public LS_Station LS_Station
		{
			get
			{
				return this._LS_Station.Entity;
			}
			set
			{
				LS_Station previousValue = this._LS_Station.Entity;
				if (((previousValue != value) 
							|| (this._LS_Station.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Station.Entity = null;
						previousValue.AC_TollWhiteLists.Remove(this);
					}
					this._LS_Station.Entity = value;
					if ((value != null))
					{
						value.AC_TollWhiteLists.Add(this);
						this._LaneIDOut = value.StationID;
					}
					else
					{
						this._LaneIDOut = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_Station");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Employee_AC_TollWhiteList", Storage="_LS_Employee1", ThisKey="LockEmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public LS_Employee LS_Employee1
		{
			get
			{
				return this._LS_Employee1.Entity;
			}
			set
			{
				LS_Employee previousValue = this._LS_Employee1.Entity;
				if (((previousValue != value) 
							|| (this._LS_Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Employee1.Entity = null;
						previousValue.AC_TollWhiteLists1.Remove(this);
					}
					this._LS_Employee1.Entity = value;
					if ((value != null))
					{
						value.AC_TollWhiteLists1.Add(this);
						this._LockEmployeeID = value.EmployeeID;
					}
					else
					{
						this._LockEmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_Employee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Employee_AC_TollWhiteList1", Storage="_LS_Employee", ThisKey="UnlockEmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public LS_Employee LS_Employee
		{
			get
			{
				return this._LS_Employee.Entity;
			}
			set
			{
				LS_Employee previousValue = this._LS_Employee.Entity;
				if (((previousValue != value) 
							|| (this._LS_Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Employee.Entity = null;
						previousValue.AC_TollWhiteLists.Remove(this);
					}
					this._LS_Employee.Entity = value;
					if ((value != null))
					{
						value.AC_TollWhiteLists.Add(this);
						this._UnlockEmployeeID = value.EmployeeID;
					}
					else
					{
						this._UnlockEmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LS_Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LS_Employee")]
	public partial class LS_Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeID;
		
		private string _EmployeeCode;
		
		private int _PositionID;
		
		private int _TeamID;
		
		private string _IDNo;
		
		private string _ManagerID;
		
		private string _UserName;
		
		private string _Password;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _NickName;
		
		private System.Nullable<short> _Gender;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private string _Address;
		
		private string _Email;
		
		private string _Mobile;
		
		private string _Note;
		
		private bool _IsUsed;
		
		private System.Nullable<bool> _IsTeamLeader;
		
		private string _SmartCardID;
		
		private EntitySet<IN_CheckSmartCard> _IN_CheckSmartCards;
		
		private EntitySet<OUT_CheckSmartCard> _OUT_CheckSmartCards;
		
		private EntitySet<AC_PPCWhiteList> _AC_PPCWhiteLists1;
		
		private EntitySet<AC_PPCWhiteList> _AC_PPCWhiteLists;
		
		private EntitySet<AC_TollWhiteList> _AC_TollWhiteLists1;
		
		private EntitySet<AC_TollWhiteList> _AC_TollWhiteLists;
		
		private EntityRef<LS_Employee> _LS_Employee2;
		
		private EntityRef<LS_Employee> _LS_Employee1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnPositionIDChanging(int value);
    partial void OnPositionIDChanged();
    partial void OnTeamIDChanging(int value);
    partial void OnTeamIDChanged();
    partial void OnIDNoChanging(string value);
    partial void OnIDNoChanged();
    partial void OnManagerIDChanging(string value);
    partial void OnManagerIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnGenderChanging(System.Nullable<short> value);
    partial void OnGenderChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnIsUsedChanging(bool value);
    partial void OnIsUsedChanged();
    partial void OnIsTeamLeaderChanging(System.Nullable<bool> value);
    partial void OnIsTeamLeaderChanged();
    partial void OnSmartCardIDChanging(string value);
    partial void OnSmartCardIDChanged();
    #endregion
		
		public LS_Employee()
		{
			this._IN_CheckSmartCards = new EntitySet<IN_CheckSmartCard>(new Action<IN_CheckSmartCard>(this.attach_IN_CheckSmartCards), new Action<IN_CheckSmartCard>(this.detach_IN_CheckSmartCards));
			this._OUT_CheckSmartCards = new EntitySet<OUT_CheckSmartCard>(new Action<OUT_CheckSmartCard>(this.attach_OUT_CheckSmartCards), new Action<OUT_CheckSmartCard>(this.detach_OUT_CheckSmartCards));
			this._AC_PPCWhiteLists1 = new EntitySet<AC_PPCWhiteList>(new Action<AC_PPCWhiteList>(this.attach_AC_PPCWhiteLists1), new Action<AC_PPCWhiteList>(this.detach_AC_PPCWhiteLists1));
			this._AC_PPCWhiteLists = new EntitySet<AC_PPCWhiteList>(new Action<AC_PPCWhiteList>(this.attach_AC_PPCWhiteLists), new Action<AC_PPCWhiteList>(this.detach_AC_PPCWhiteLists));
			this._AC_TollWhiteLists1 = new EntitySet<AC_TollWhiteList>(new Action<AC_TollWhiteList>(this.attach_AC_TollWhiteLists1), new Action<AC_TollWhiteList>(this.detach_AC_TollWhiteLists1));
			this._AC_TollWhiteLists = new EntitySet<AC_TollWhiteList>(new Action<AC_TollWhiteList>(this.attach_AC_TollWhiteLists), new Action<AC_TollWhiteList>(this.detach_AC_TollWhiteLists));
			this._LS_Employee2 = default(EntityRef<LS_Employee>);
			this._LS_Employee1 = default(EntityRef<LS_Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._LS_Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionID", DbType="Int NOT NULL")]
		public int PositionID
		{
			get
			{
				return this._PositionID;
			}
			set
			{
				if ((this._PositionID != value))
				{
					this.OnPositionIDChanging(value);
					this.SendPropertyChanging();
					this._PositionID = value;
					this.SendPropertyChanged("PositionID");
					this.OnPositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", DbType="Int NOT NULL")]
		public int TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					this.OnTeamIDChanging(value);
					this.SendPropertyChanging();
					this._TeamID = value;
					this.SendPropertyChanged("TeamID");
					this.OnTeamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string IDNo
		{
			get
			{
				return this._IDNo;
			}
			set
			{
				if ((this._IDNo != value))
				{
					this.OnIDNoChanging(value);
					this.SendPropertyChanging();
					this._IDNo = value;
					this.SendPropertyChanged("IDNo");
					this.OnIDNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerID", DbType="NVarChar(20)")]
		public string ManagerID
		{
			get
			{
				return this._ManagerID;
			}
			set
			{
				if ((this._ManagerID != value))
				{
					this.OnManagerIDChanging(value);
					this.SendPropertyChanging();
					this._ManagerID = value;
					this.SendPropertyChanged("ManagerID");
					this.OnManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="NVarChar(50)")]
		public string NickName
		{
			get
			{
				return this._NickName;
			}
			set
			{
				if ((this._NickName != value))
				{
					this.OnNickNameChanging(value);
					this.SendPropertyChanging();
					this._NickName = value;
					this.SendPropertyChanged("NickName");
					this.OnNickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="SmallInt")]
		public System.Nullable<short> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(20)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit NOT NULL")]
		public bool IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTeamLeader", DbType="Bit")]
		public System.Nullable<bool> IsTeamLeader
		{
			get
			{
				return this._IsTeamLeader;
			}
			set
			{
				if ((this._IsTeamLeader != value))
				{
					this.OnIsTeamLeaderChanging(value);
					this.SendPropertyChanging();
					this._IsTeamLeader = value;
					this.SendPropertyChanged("IsTeamLeader");
					this.OnIsTeamLeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmartCardID", DbType="NVarChar(20)")]
		public string SmartCardID
		{
			get
			{
				return this._SmartCardID;
			}
			set
			{
				if ((this._SmartCardID != value))
				{
					this.OnSmartCardIDChanging(value);
					this.SendPropertyChanging();
					this._SmartCardID = value;
					this.SendPropertyChanged("SmartCardID");
					this.OnSmartCardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Employee_IN_CheckSmartCard", Storage="_IN_CheckSmartCards", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<IN_CheckSmartCard> IN_CheckSmartCards
		{
			get
			{
				return this._IN_CheckSmartCards;
			}
			set
			{
				this._IN_CheckSmartCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Employee_OUT_CheckSmartCard", Storage="_OUT_CheckSmartCards", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<OUT_CheckSmartCard> OUT_CheckSmartCards
		{
			get
			{
				return this._OUT_CheckSmartCards;
			}
			set
			{
				this._OUT_CheckSmartCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Employee_AC_PPCWhiteList", Storage="_AC_PPCWhiteLists1", ThisKey="EmployeeID", OtherKey="LockEmployeeID")]
		public EntitySet<AC_PPCWhiteList> AC_PPCWhiteLists1
		{
			get
			{
				return this._AC_PPCWhiteLists1;
			}
			set
			{
				this._AC_PPCWhiteLists1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Employee_AC_PPCWhiteList1", Storage="_AC_PPCWhiteLists", ThisKey="EmployeeID", OtherKey="UnlockEmployeeID")]
		public EntitySet<AC_PPCWhiteList> AC_PPCWhiteLists
		{
			get
			{
				return this._AC_PPCWhiteLists;
			}
			set
			{
				this._AC_PPCWhiteLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Employee_AC_TollWhiteList", Storage="_AC_TollWhiteLists1", ThisKey="EmployeeID", OtherKey="LockEmployeeID")]
		public EntitySet<AC_TollWhiteList> AC_TollWhiteLists1
		{
			get
			{
				return this._AC_TollWhiteLists1;
			}
			set
			{
				this._AC_TollWhiteLists1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Employee_AC_TollWhiteList1", Storage="_AC_TollWhiteLists", ThisKey="EmployeeID", OtherKey="UnlockEmployeeID")]
		public EntitySet<AC_TollWhiteList> AC_TollWhiteLists
		{
			get
			{
				return this._AC_TollWhiteLists;
			}
			set
			{
				this._AC_TollWhiteLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Employee_LS_Employee", Storage="_LS_Employee2", ThisKey="EmployeeID", OtherKey="EmployeeID", IsUnique=true, IsForeignKey=false)]
		public LS_Employee LS_Employee2
		{
			get
			{
				return this._LS_Employee2.Entity;
			}
			set
			{
				LS_Employee previousValue = this._LS_Employee2.Entity;
				if (((previousValue != value) 
							|| (this._LS_Employee2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Employee2.Entity = null;
						previousValue.LS_Employee1 = null;
					}
					this._LS_Employee2.Entity = value;
					if ((value != null))
					{
						value.LS_Employee1 = this;
					}
					this.SendPropertyChanged("LS_Employee2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_Employee_LS_Employee", Storage="_LS_Employee1", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public LS_Employee LS_Employee1
		{
			get
			{
				return this._LS_Employee1.Entity;
			}
			set
			{
				LS_Employee previousValue = this._LS_Employee1.Entity;
				if (((previousValue != value) 
							|| (this._LS_Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_Employee1.Entity = null;
						previousValue.LS_Employee2 = null;
					}
					this._LS_Employee1.Entity = value;
					if ((value != null))
					{
						value.LS_Employee2 = this;
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(int);
					}
					this.SendPropertyChanged("LS_Employee1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IN_CheckSmartCards(IN_CheckSmartCard entity)
		{
			this.SendPropertyChanging();
			entity.LS_Employee = this;
		}
		
		private void detach_IN_CheckSmartCards(IN_CheckSmartCard entity)
		{
			this.SendPropertyChanging();
			entity.LS_Employee = null;
		}
		
		private void attach_OUT_CheckSmartCards(OUT_CheckSmartCard entity)
		{
			this.SendPropertyChanging();
			entity.LS_Employee = this;
		}
		
		private void detach_OUT_CheckSmartCards(OUT_CheckSmartCard entity)
		{
			this.SendPropertyChanging();
			entity.LS_Employee = null;
		}
		
		private void attach_AC_PPCWhiteLists1(AC_PPCWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Employee1 = this;
		}
		
		private void detach_AC_PPCWhiteLists1(AC_PPCWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Employee1 = null;
		}
		
		private void attach_AC_PPCWhiteLists(AC_PPCWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Employee = this;
		}
		
		private void detach_AC_PPCWhiteLists(AC_PPCWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Employee = null;
		}
		
		private void attach_AC_TollWhiteLists1(AC_TollWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Employee1 = this;
		}
		
		private void detach_AC_TollWhiteLists1(AC_TollWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Employee1 = null;
		}
		
		private void attach_AC_TollWhiteLists(AC_TollWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Employee = this;
		}
		
		private void detach_AC_TollWhiteLists(AC_TollWhiteList entity)
		{
			this.SendPropertyChanging();
			entity.LS_Employee = null;
		}
	}
}
#pragma warning restore 1591
